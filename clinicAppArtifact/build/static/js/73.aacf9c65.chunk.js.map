{"version":3,"file":"static/js/73.aacf9c65.chunk.js","mappings":"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","sources":["Components/Doctors/DashboardDoctors.js","Components/MyTable/DebouncedInput.js","Components/MyTable/MyTable.js","Components/Forms/EditPasswordForm.js","Components/models/EditPasswordModal.js","Components/models/ModalWrapperV1.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport DashboardWrapper from \"../Shared/DashboardWrapper\";\r\nimport Header from \"../Shared/Header\";\r\nimport { createColumnHelper } from \"@tanstack/react-table\";\r\nimport mdata from \"./MOCK_DATA.json\";\r\nimport MyTable from \"../MyTable/MyTable\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport TransitionAlerts from \"../Alerts/TransitionAlerts\";\r\nimport { FaEdit, FaTimes } from \"react-icons/fa\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\nimport EditPasswordModal from \"../models/EditPasswordModal\";\r\n\r\nconst DashboardDoctors = () => {\r\n  const [data, setData] = useState([]);\r\n  const columnHelper = createColumnHelper();\r\n\r\n  const token = useSelector((state) => state.authState.token);\r\n  const user = useSelector((state) => state.authState.user);\r\n  console.log({user});\r\n  const [editPasswordModal, setEditPasswordModal] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    message,\r\n    open,\r\n    sendRequest,\r\n    setMessage,\r\n    setOpen,\r\n    initiateLoading,\r\n    abortSucessfullLoading,\r\n  } = useFetch();\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await sendRequest(\r\n        \"/api/doctor/getalldoctors\",\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setData(response.message);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const deleteDoctors = async (id) => {\r\n    try {\r\n      if (!id) throw new Error(\"id required to delete\");\r\n\r\n      const response = await sendRequest(\r\n        `/api/doctor/deletedoctor/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      console.log(response);\r\n      setData((prevData) => prevData.filter((item) => item._id !== id));\r\n      abortSucessfullLoading(\"Sucessfully delete\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      abortSucessfullLoading(error.message);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    columnHelper.accessor(\"_id\", { header: \"ID\" }),\r\n    columnHelper.accessor(\"firstname\", { header: \"First Name\" }),\r\n    columnHelper.accessor(\"lastname\", { header: \"Last Name\" }),\r\n    columnHelper.accessor(\"email\", { header: \"Email\" }),\r\n    columnHelper.accessor(\"phonenumber\", { header: \"Phone Number\" }),\r\n    columnHelper.accessor(\"specialization\", { header: \"Specialization\" }),\r\n    columnHelper.accessor(\"years_of_experience\", { header: \"Experience\" }),\r\n    // columnHelper.accessor(\"dob\", {\r\n    //   header: \"Dob\",\r\n    //   cell: (info) => {\r\n    //     return <span>{info.row.original.dob}</span>;\r\n    //   },\r\n    // }),\r\n  ];\r\n  const [tableColumns, setTableColumns] = useState(columns);\r\n\r\n  useEffect(() => {\r\n    fetchDoctors();\r\n    if (user?.isAdmin === \"admin\") {\r\n      setTableColumns((prevColumns) => {\r\n        const hasEditColumn = prevColumns.some(\r\n          (column) => column.id === \"edit\"\r\n        );\r\n        const hasDeleteColumn = prevColumns.some(\r\n          (column) => column.id === \"delete\"\r\n        );\r\n\r\n        const newColumns = [...prevColumns];\r\n        if (!hasEditColumn) {\r\n          newColumns.push({\r\n            id: \"edit\",\r\n            header: \"Edit\",\r\n            cell: (info) => (\r\n              <div className=\"flex justify-start items-center\">\r\n                <button\r\n                  onClick={() => {\r\n                    console.log(info.row.original);\r\n                    setEditPasswordModal(true);\r\n                    setSelectedDoctor(info.row.original);\r\n                  }}\r\n                  className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n                  hover:text-[#000000] transition-colors duration-300 ease-in-out\r\n                  \"\r\n                >\r\n                  <FaEdit />\r\n                  <span>Edit</span>\r\n                </button>\r\n              </div>\r\n            ),\r\n          });\r\n        }\r\n\r\n        if (!hasDeleteColumn) {\r\n          newColumns.push({\r\n            id: \"delete\",\r\n            header: \"Delete\",\r\n            cell: (info) => (\r\n              <div className=\"flex justify-start items-center\">\r\n                <button\r\n                  onClick={() => {\r\n                    console.log(info.row.original);\r\n                    deleteDoctors(info.row.original._id);\r\n                  }}\r\n                  className=\"flex items-center gap-1 bg-red-500 text-white py-1 px-2 rounded-md hover:text-[#000000] transition-colors duration-300 ease-in-out\"\r\n                >\r\n                  <FaTimes />\r\n                  <span>Delete</span>\r\n                </button>\r\n              </div>\r\n            ),\r\n          });\r\n        }\r\n\r\n        return newColumns;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <div className=\"min-h-screen flex text-sm md:text-[20px] lg:text-lg  flex-col lg:px-32 px-5 pt-0 lg:pt-0\">\r\n        <Header title={\"Our Doctors\"} />\r\n        <div className=\"bg-[#fff]\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : (\r\n            <MyTable\r\n              columns={tableColumns}\r\n              data={data}\r\n              // handleDownload={downloader.download}\r\n            />\r\n          )}\r\n        </div>\r\n        {editPasswordModal && (\r\n          <EditPasswordModal\r\n            closeModal={setEditPasswordModal}\r\n            user={selectedDoctor}\r\n          />\r\n        )}\r\n        <div>\r\n          <NotificationBanner\r\n            isLoading={isLoading}\r\n            message={message}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </div>\r\n      </div>\r\n    </DashboardWrapper>\r\n  );\r\n};\r\n\r\nexport default DashboardDoctors;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst DebouncedInput = ({\r\n  value: initValue,\r\n  onChange,\r\n  debounce = 700,\r\n  ...props\r\n}) => {\r\n  const [value, setValue] = useState(initValue);\r\n\r\n  useEffect(() => {\r\n    setValue(initValue);\r\n  }, [initValue]);\r\n\r\n  // *  0.5s after set value in state\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      onChange(value);\r\n    }, debounce);\r\n    return () => clearTimeout(timeout);\r\n  }, [value]);\r\n\r\n  return (\r\n    <input\r\n      {...props}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DebouncedInput;\r\n","import React, { useState } from \"react\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\n\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport DebouncedInput from \"./DebouncedInput\";\r\n\r\nconst MyTable = ({\r\n  columns,\r\n  data,\r\n  handleDownload,\r\n  flg = true,\r\n  inpflag = true,\r\n  heightFlag=false\r\n}) => {\r\n  const [globalFilter, setGlobalFilter] = useState(\"\");\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: {\r\n      globalFilter,\r\n    },\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-2 text-white \">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        {inpflag && (\r\n          <div className=\"flex items-center gap-2 text-black\">\r\n            <DebouncedInput\r\n              value={globalFilter ?? \"\"}\r\n              onChange={(value) => setGlobalFilter(String(value))}\r\n              className=\"p-2 bg-transparent outline-none border-b-2 focus:border-indigo-500\"\r\n              placeholder=\"Search all columns...\"\r\n            />\r\n          </div>\r\n        )}\r\n        {flg && (\r\n          <button\r\n            onClick={(e) => {}}\r\n            className=\"p-2 bg-green-500 rounded-md text-white flex items-center gap-1\"\r\n          >\r\n            <BsDownload className=\"w-6 h-6\" />\r\n            Download\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"w-[350px] h-[400px] text-sm sm:text-sm md:text-sm lg:text-sm overflow-auto sm:w-full md:w-full md:h-[484px] lg:w-full lg:h-[484px]\">\r\n        <table className=\"border-collapse text-left border border-gray-700 md:w-full lg:w-full\">\r\n          <thead className=\"bg-indigo-600 \">\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className=\"capitalize px-3.5 py-2\">\r\n                    {flexRender(\r\n                      header.column.columnDef.header,\r\n                      header.getContext()\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.length ? (\r\n              table.getRowModel().rows.map((row, i) => (\r\n                <tr\r\n                  key={row.id}\r\n                  className={`\r\n                  ${i % 2 === 0 ? \"bg-gray-900\" : \"bg-gray-800\"}\r\n                  `}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <td key={cell.id} className=\"px-3.5 py-2\">\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr className=\"text-center h-32\">\r\n                <td colSpan={12}>No Recoard Found!</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"flex flex-col lg:flex-row items-center justify-center lg:justify-end mt-2 lg:mt-0 lg:gap-2 text-black\">\r\n        <button\r\n          onClick={() => {\r\n            table.previousPage();\r\n          }}\r\n          disabled={!table.getCanPreviousPage()}\r\n          className=\"p-1 border border-gray-300 px-2 lg:px-2 disabled:opacity-30\"\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            table.nextPage();\r\n          }}\r\n          disabled={!table.getCanNextPage()}\r\n          className=\"p-1 border border-gray-300 px-2 disabled:opacity-30\"\r\n        >\r\n          {\">\"}\r\n        </button>\r\n\r\n        <div className=\"mt-2 lg:mt-0 flex flex-col lg:flex-row items-center gap-2\">\r\n          <span className=\"flex items-center gap-1\">\r\n            <div>Page</div>\r\n            <strong>\r\n              {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </strong>\r\n          </span>\r\n          <span className=\"flex items-center gap-1\">\r\n            | Go to page:\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={table.getState().pagination.pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                table.setPageIndex(page);\r\n              }}\r\n              className=\"border p-1 rounded w-16 bg-transparent\"\r\n            />\r\n          </span>\r\n          <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={(e) => {\r\n              table.setPageSize(Number(e.target.value));\r\n            }}\r\n            className=\"p-1 md:p-2 lg:p-2  bg-transparent\"\r\n          >\r\n            {[10, 20, 30, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\n\r\nconst EditPasswordForm = ({ user, closeModal, flg = true }) => {\r\n  const token = useSelector((state) => state.authState.token);\r\n  console.log(flg);\r\n  const [formData, setFormData] = useState({\r\n    password: \"savonia\",\r\n    confirmPassword: \"savonia\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  /* This is a very bad practice for implementing the logic below as it make things very tightly coupled from above states */\r\n  const handleSubmitDoctorUpdate = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(formData);\r\n      console.log(user);\r\n      initiateLoading();\r\n      if (formData.password !== formData.confirmPassword)\r\n        throw new Error(\"Passwords doesnot match\");\r\n\r\n      const response = await sendRequest(\r\n        `/api/doctor/updatedoctor/${user._id}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          password: formData.password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      abortSucessfullLoading(\r\n        `${user.isAdmin} ${user.firstname} password updated`\r\n      );\r\n    } catch (error) {\r\n      abortSucessfullLoading(error.message);\r\n    }\r\n  };\r\n  const handleSubmitPatientUpdate = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(formData);\r\n      console.log(user);\r\n      initiateLoading();\r\n      if (formData.password !== formData.confirmPassword)\r\n        throw new Error(\"Passwords doesnot match\");\r\n\r\n      const response = await sendRequest(\r\n        `/api/patient/updatepatient/${user._id}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          password: formData.password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      abortSucessfullLoading(\r\n        `${user.isAdmin} ${user.firstname} password updated`\r\n      );\r\n    } catch (error) {\r\n      abortSucessfullLoading(error.message);\r\n    }\r\n  };\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    sendRequest,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    setMessage,\r\n    initiateLoading,\r\n    abortLoading,\r\n    abortSucessfullLoading,\r\n  } = useFetch();\r\n  useEffect(() => {\r\n    return () => {\r\n      abortLoading();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"bg-white p-15\"\r\n        onSubmit={flg ? handleSubmitDoctorUpdate : handleSubmitPatientUpdate}\r\n      >\r\n        <div>\r\n          <h1> Edit Doctor Details </h1>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group mt-2\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            id=\"password\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Password\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            id=\"confirmPassword\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"confirmPassword\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Doctor Id\r\n          </label>\r\n        </div>\r\n        <div className=\"flex gap-x-2\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n     hover:text-gray-800 transition-colors duration-300 \"\r\n          >\r\n            Submit\r\n          </button>\r\n          <div>\r\n            <button\r\n              className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n     hover:text-gray-800 transition-colors duration-300 \"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                closeModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"mt-2\">\r\n        <NotificationBanner\r\n          isLoading={isLoading}\r\n          message={message}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPasswordForm;\r\n","import React from \"react\";\r\nimport ModalWrapperV1 from \"./ModalWrapperV1\";\r\nimport EditPasswordForm from \"../Forms/EditPasswordForm\";\r\n\r\nconst EditPasswordModal = ({ user, closeModal, flg = true }) => {\r\n  return (\r\n    <ModalWrapperV1>\r\n      <EditPasswordForm user={user} closeModal={closeModal} flg={flg} />\r\n    </ModalWrapperV1>\r\n  );\r\n};\r\n\r\nexport default EditPasswordModal;\r\n","import React from \"react\";\r\n\r\nconst ModalWrapperV1 = ({ children }) => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-4 rounded shadow-md w-80\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWrapperV1;\r\n"],"names":["DashboardDoctors","data","setData","useState","columnHelper","createColumnHelper","token","useSelector","state","authState","user","console","log","editPasswordModal","setEditPasswordModal","selectedDoctor","setSelectedDoctor","isLoading","setIsLoading","message","open","sendRequest","setMessage","setOpen","initiateLoading","abortSucessfullLoading","useFetch","columns","accessor","header","tableColumns","setTableColumns","useEffect","async","response","Authorization","status","Error","error","fetchDoctors","isAdmin","prevColumns","hasEditColumn","some","column","id","hasDeleteColumn","newColumns","push","cell","info","_jsx","className","children","_jsxs","onClick","row","original","FaEdit","concat","prevData","filter","item","_id","deleteDoctors","FaTimes","DashboardWrapper","Header","title","Loading","MyTable","EditPasswordModal","closeModal","NotificationBanner","_ref","value","initValue","onChange","debounce","props","setValue","timeout","setTimeout","clearTimeout","e","target","handleDownload","flg","inpflag","heightFlag","globalFilter","setGlobalFilter","table","useReactTable","getFilteredRowModel","getCoreRowModel","getPaginationRowModel","DebouncedInput","String","placeholder","BsDownload","getHeaderGroups","map","headerGroup","headers","flexRender","columnDef","getContext","getRowModel","rows","length","i","getVisibleCells","colSpan","previousPage","disabled","getCanPreviousPage","nextPage","getCanNextPage","getState","pagination","pageIndex","getPageCount","type","defaultValue","page","Number","setPageIndex","pageSize","setPageSize","formData","setFormData","password","confirmPassword","handleChange","name","prevState","abortLoading","_Fragment","onSubmit","preventDefault","JSON","stringify","firstname","required","htmlFor","ModalWrapperV1","EditPasswordForm"],"sourceRoot":""}