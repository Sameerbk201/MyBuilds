{"version":3,"file":"static/js/581.c869242b.chunk.js","mappings":"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","sources":["Components/MyTable/DebouncedInput.js","Components/MyTable/MyTable.js","Components/Patients/Patient.js","Components/Forms/EditPasswordForm.js","Components/models/EditPasswordModal.js","Components/models/ModalWrapperV1.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst DebouncedInput = ({\r\n  value: initValue,\r\n  onChange,\r\n  debounce = 700,\r\n  ...props\r\n}) => {\r\n  const [value, setValue] = useState(initValue);\r\n\r\n  useEffect(() => {\r\n    setValue(initValue);\r\n  }, [initValue]);\r\n\r\n  // *  0.5s after set value in state\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      onChange(value);\r\n    }, debounce);\r\n    return () => clearTimeout(timeout);\r\n  }, [value]);\r\n\r\n  return (\r\n    <input\r\n      {...props}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DebouncedInput;\r\n","import React, { useState } from \"react\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\n\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport DebouncedInput from \"./DebouncedInput\";\r\n\r\nconst MyTable = ({\r\n  columns,\r\n  data,\r\n  handleDownload,\r\n  flg = true,\r\n  inpflag = true,\r\n  heightFlag=false\r\n}) => {\r\n  const [globalFilter, setGlobalFilter] = useState(\"\");\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: {\r\n      globalFilter,\r\n    },\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-2 text-white \">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        {inpflag && (\r\n          <div className=\"flex items-center gap-2 text-black\">\r\n            <DebouncedInput\r\n              value={globalFilter ?? \"\"}\r\n              onChange={(value) => setGlobalFilter(String(value))}\r\n              className=\"p-2 bg-transparent outline-none border-b-2 focus:border-indigo-500\"\r\n              placeholder=\"Search all columns...\"\r\n            />\r\n          </div>\r\n        )}\r\n        {flg && (\r\n          <button\r\n            onClick={(e) => {}}\r\n            className=\"p-2 bg-green-500 rounded-md text-white flex items-center gap-1\"\r\n          >\r\n            <BsDownload className=\"w-6 h-6\" />\r\n            Download\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"w-[350px] h-[400px] text-sm sm:text-sm md:text-sm lg:text-sm overflow-auto sm:w-full md:w-full md:h-[484px] lg:w-full lg:h-[484px]\">\r\n        <table className=\"border-collapse text-left border border-gray-700 md:w-full lg:w-full\">\r\n          <thead className=\"bg-indigo-600 \">\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className=\"capitalize px-3.5 py-2\">\r\n                    {flexRender(\r\n                      header.column.columnDef.header,\r\n                      header.getContext()\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.length ? (\r\n              table.getRowModel().rows.map((row, i) => (\r\n                <tr\r\n                  key={row.id}\r\n                  className={`\r\n                  ${i % 2 === 0 ? \"bg-gray-900\" : \"bg-gray-800\"}\r\n                  `}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <td key={cell.id} className=\"px-3.5 py-2\">\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr className=\"text-center h-32\">\r\n                <td colSpan={12}>No Recoard Found!</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"flex flex-col lg:flex-row items-center justify-center lg:justify-end mt-2 lg:mt-0 lg:gap-2 text-black\">\r\n        <button\r\n          onClick={() => {\r\n            table.previousPage();\r\n          }}\r\n          disabled={!table.getCanPreviousPage()}\r\n          className=\"p-1 border border-gray-300 px-2 lg:px-2 disabled:opacity-30\"\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            table.nextPage();\r\n          }}\r\n          disabled={!table.getCanNextPage()}\r\n          className=\"p-1 border border-gray-300 px-2 disabled:opacity-30\"\r\n        >\r\n          {\">\"}\r\n        </button>\r\n\r\n        <div className=\"mt-2 lg:mt-0 flex flex-col lg:flex-row items-center gap-2\">\r\n          <span className=\"flex items-center gap-1\">\r\n            <div>Page</div>\r\n            <strong>\r\n              {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </strong>\r\n          </span>\r\n          <span className=\"flex items-center gap-1\">\r\n            | Go to page:\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={table.getState().pagination.pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                table.setPageIndex(page);\r\n              }}\r\n              className=\"border p-1 rounded w-16 bg-transparent\"\r\n            />\r\n          </span>\r\n          <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={(e) => {\r\n              table.setPageSize(Number(e.target.value));\r\n            }}\r\n            className=\"p-1 md:p-2 lg:p-2  bg-transparent\"\r\n          >\r\n            {[10, 20, 30, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport DashboardWrapper from \"../Shared/DashboardWrapper\";\r\nimport Header from \"../Shared/Header\";\r\nimport { createColumnHelper } from \"@tanstack/react-table\";\r\nimport MyTable from \"../MyTable/MyTable\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TransitionAlerts from \"../Alerts/TransitionAlerts\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { FaEdit, FaTimes } from \"react-icons/fa\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\nimport EditPasswordModal from \"../models/EditPasswordModal\";\r\nconst Patient = () => {\r\n  const [data, setData] = useState([]);\r\n  const columnHelper = createColumnHelper();\r\n  const token = useSelector((state) => state.authState.token);\r\n  const user = useSelector((state) => state.authState.user);\r\n  console.log({user});\r\n  const [editPasswordModal, setEditPasswordModal] = useState(false);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  const deletePatient = async (id) => {\r\n    try {\r\n      if (!id) throw new Error(\"id required to delete\");\r\n\r\n      const response = await sendRequest(\r\n        `/api/patient/deletepatient/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      console.log(response);\r\n      setData((prevData) => prevData.filter((item) => item._id !== id));\r\n      abortSucessfullLoading(\"Sucessfully delete\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      abortSucessfullLoading(error.message);\r\n    }\r\n  };\r\n\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    message,\r\n    open,\r\n    sendRequest,\r\n    setMessage,\r\n    setOpen,\r\n    initiateLoading,\r\n    abortSucessfullLoading,\r\n  } = useFetch();\r\n  /* Fetch Patients */\r\n  const fetchPatients = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await sendRequest(\r\n        \"/api/patient/getallpatients\",\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setData(response.message);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    columnHelper.accessor(\"_id\", { header: \"ID\" }),\r\n    columnHelper.accessor(\"firstname\", { header: \"First Name\" }),\r\n    columnHelper.accessor(\"lastname\", { header: \"Last Name\" }),\r\n    columnHelper.accessor(\"email\", { header: \"Email\" }),\r\n    columnHelper.accessor(\"phonenumber\", { header: \"Phone Number\" }),\r\n    // columnHelper.accessor(\"dob\", {\r\n    //   header: \"Dob\",\r\n    //   cell: (info) => {\r\n    //     return <span>{info.row.original.dob}</span>;\r\n    //   },\r\n    // }),\r\n  ];\r\n  const [tableColumns, setTableColumns] = useState(columns);\r\n  useEffect(() => {\r\n    fetchPatients();\r\n    if (user?.isAdmin === \"admin\") {\r\n      setTableColumns((prevColumns) => {\r\n        const hasEditColumn = prevColumns.some(\r\n          (column) => column.id === \"edit\"\r\n        );\r\n        const hasDeleteColumn = prevColumns.some(\r\n          (column) => column.id === \"delete\"\r\n        );\r\n\r\n        const newColumns = [...prevColumns];\r\n        if (!hasEditColumn) {\r\n          newColumns.push({\r\n            id: \"edit\",\r\n            header: \"Edit\",\r\n            cell: (info) => (\r\n              <div className=\"flex justify-start items-center\">\r\n                <button\r\n                  onClick={() => {\r\n                    console.log(info.row.original);\r\n                    setEditPasswordModal(true);\r\n                    setSelectedPatient(info.row.original);\r\n                  }}\r\n                  className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n                  hover:text-[#000000] transition-colors duration-300 ease-in-out\r\n                  \"\r\n                >\r\n                  <FaEdit />\r\n                  <span>Edit</span>\r\n                </button>\r\n              </div>\r\n            ),\r\n          });\r\n        }\r\n\r\n        if (!hasDeleteColumn) {\r\n          newColumns.push({\r\n            id: \"delete\",\r\n            header: \"Delete\",\r\n            cell: (info) => (\r\n              <div className=\"flex justify-start items-center\">\r\n                <button\r\n                  onClick={() => {\r\n                    console.log(info.row.original);\r\n                    deletePatient(info.row.original._id);\r\n                  }}\r\n                  className=\"flex items-center gap-1 bg-red-500 text-white py-1 px-2 rounded-md hover:text-[#000000] transition-colors duration-300 ease-in-out\"\r\n                >\r\n                  <FaTimes />\r\n                  <span>Delete</span>\r\n                </button>\r\n              </div>\r\n            ),\r\n          });\r\n        }\r\n\r\n        return newColumns;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <div className=\"min-h-screen flex text-sm md:text-[20px] lg:text-lg  flex-col lg:px-32 px-5 pt-0 lg:pt-0\">\r\n        <Header title={\"Our Doctors\"} />\r\n        <div className=\"bg-[#fff]\">\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : (\r\n            <MyTable\r\n              columns={tableColumns}\r\n              data={data}\r\n              // handleDownload={downloader.download}\r\n            />\r\n          )}\r\n        </div>\r\n        <div>\r\n          {editPasswordModal && (\r\n            <EditPasswordModal\r\n              closeModal={setEditPasswordModal}\r\n              user={selectedPatient}\r\n              flg={false}\r\n            />\r\n          )}\r\n          <div>\r\n            <NotificationBanner\r\n              isLoading={isLoading}\r\n              message={message}\r\n              open={open}\r\n              setOpen={setOpen}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DashboardWrapper>\r\n  );\r\n};\r\n\r\nexport default Patient;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\n\r\nconst EditPasswordForm = ({ user, closeModal, flg = true }) => {\r\n  const token = useSelector((state) => state.authState.token);\r\n  console.log(flg);\r\n  const [formData, setFormData] = useState({\r\n    password: \"savonia\",\r\n    confirmPassword: \"savonia\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  /* This is a very bad practice for implementing the logic below as it make things very tightly coupled from above states */\r\n  const handleSubmitDoctorUpdate = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(formData);\r\n      console.log(user);\r\n      initiateLoading();\r\n      if (formData.password !== formData.confirmPassword)\r\n        throw new Error(\"Passwords doesnot match\");\r\n\r\n      const response = await sendRequest(\r\n        `/api/doctor/updatedoctor/${user._id}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          password: formData.password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      abortSucessfullLoading(\r\n        `${user.isAdmin} ${user.firstname} password updated`\r\n      );\r\n    } catch (error) {\r\n      abortSucessfullLoading(error.message);\r\n    }\r\n  };\r\n  const handleSubmitPatientUpdate = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(formData);\r\n      console.log(user);\r\n      initiateLoading();\r\n      if (formData.password !== formData.confirmPassword)\r\n        throw new Error(\"Passwords doesnot match\");\r\n\r\n      const response = await sendRequest(\r\n        `/api/patient/updatepatient/${user._id}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          password: formData.password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      abortSucessfullLoading(\r\n        `${user.isAdmin} ${user.firstname} password updated`\r\n      );\r\n    } catch (error) {\r\n      abortSucessfullLoading(error.message);\r\n    }\r\n  };\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    sendRequest,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    setMessage,\r\n    initiateLoading,\r\n    abortLoading,\r\n    abortSucessfullLoading,\r\n  } = useFetch();\r\n  useEffect(() => {\r\n    return () => {\r\n      abortLoading();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"bg-white p-15\"\r\n        onSubmit={flg ? handleSubmitDoctorUpdate : handleSubmitPatientUpdate}\r\n      >\r\n        <div>\r\n          <h1> Edit Doctor Details </h1>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group mt-2\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            id=\"password\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Password\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            id=\"confirmPassword\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"confirmPassword\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Doctor Id\r\n          </label>\r\n        </div>\r\n        <div className=\"flex gap-x-2\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n     hover:text-gray-800 transition-colors duration-300 \"\r\n          >\r\n            Submit\r\n          </button>\r\n          <div>\r\n            <button\r\n              className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n     hover:text-gray-800 transition-colors duration-300 \"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                closeModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"mt-2\">\r\n        <NotificationBanner\r\n          isLoading={isLoading}\r\n          message={message}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPasswordForm;\r\n","import React from \"react\";\r\nimport ModalWrapperV1 from \"./ModalWrapperV1\";\r\nimport EditPasswordForm from \"../Forms/EditPasswordForm\";\r\n\r\nconst EditPasswordModal = ({ user, closeModal, flg = true }) => {\r\n  return (\r\n    <ModalWrapperV1>\r\n      <EditPasswordForm user={user} closeModal={closeModal} flg={flg} />\r\n    </ModalWrapperV1>\r\n  );\r\n};\r\n\r\nexport default EditPasswordModal;\r\n","import React from \"react\";\r\n\r\nconst ModalWrapperV1 = ({ children }) => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-4 rounded shadow-md w-80\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWrapperV1;\r\n"],"names":["_ref","value","initValue","onChange","debounce","props","setValue","useState","useEffect","timeout","setTimeout","clearTimeout","_jsx","e","target","columns","data","handleDownload","flg","inpflag","heightFlag","globalFilter","setGlobalFilter","table","useReactTable","state","getFilteredRowModel","getCoreRowModel","getPaginationRowModel","_jsxs","className","children","DebouncedInput","String","placeholder","onClick","BsDownload","getHeaderGroups","map","headerGroup","headers","header","flexRender","column","columnDef","getContext","id","getRowModel","rows","length","row","i","concat","getVisibleCells","cell","colSpan","previousPage","disabled","getCanPreviousPage","nextPage","getCanNextPage","getState","pagination","pageIndex","getPageCount","type","defaultValue","page","Number","setPageIndex","pageSize","setPageSize","Patient","setData","columnHelper","createColumnHelper","token","useSelector","authState","user","console","log","editPasswordModal","setEditPasswordModal","selectedPatient","setSelectedPatient","isLoading","setIsLoading","message","open","sendRequest","setMessage","setOpen","initiateLoading","abortSucessfullLoading","useFetch","accessor","tableColumns","setTableColumns","async","response","Authorization","status","Error","error","fetchPatients","isAdmin","prevColumns","hasEditColumn","some","hasDeleteColumn","newColumns","push","info","original","FaEdit","prevData","filter","item","_id","deletePatient","FaTimes","DashboardWrapper","Header","title","Loading","MyTable","EditPasswordModal","closeModal","NotificationBanner","formData","setFormData","password","confirmPassword","handleChange","name","prevState","abortLoading","_Fragment","onSubmit","preventDefault","JSON","stringify","firstname","required","htmlFor","ModalWrapperV1","EditPasswordForm"],"sourceRoot":""}