{"version":3,"file":"static/js/615.be76e5ce.chunk.js","mappings":"2OAIA,MAgSA,EAhSqBA,IAAqB,IAApB,WAAEC,GAAYD,EAClC,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,WAAY,GACZC,gBAAiB,GACjBC,aAAc,GACdC,aAAc,GACdC,YAAa,EACbC,kBAAmB,WAGdC,EAAaC,IAAkBR,EAAAA,EAAAA,WAAS,GA2BzCS,EAAwBC,IAC5B,MAAMC,EAAO,IAAIC,KAAKF,GAGhBG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAMN,EAAKO,UACXC,EAAQR,EAAKS,WACbC,EAAUV,EAAKW,aACfC,EAAUZ,EAAKa,aAGfC,EAAa,GAAAC,OAAMb,EAAI,KAAAa,OAAIX,EAAMY,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAIT,EACnEU,WACAC,SAAS,EAAG,MACTC,EAAa,GAAAH,OAAMP,EAAMQ,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAIL,EAC3DM,WACAC,SAAS,EAAG,KAAI,KAAAF,OAAIH,EAAQI,WAAWC,SAAS,EAAG,MAEtDE,QAAQC,IAAI,QAASN,GACrBK,QAAQC,IAAI,QAASF,EAAc,EAG/BG,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BrC,GAAasC,IAAQ,IAChBA,EACH,CAACH,GAAOC,KACP,EAmHL,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCC,EAAAA,EAAAA,MAAA,QAAME,SAhCUV,IACpBA,EAAEW,iBACFd,QAAQC,IAAI,kBAAmBjC,GAE/B,MAAM,aAAEK,EAAY,aAAEC,EAAY,YAAEC,EAAW,kBAAEC,GAC/CR,EAGI+C,GACY,IAAhBtC,EACIuC,IAAO,GAADpB,OAAIvB,EAAY,KAAAuB,OAAItB,GAAgB,oBAC1C0C,IAAO,GAADpB,OAAIvB,EAAY,KAAAuB,OAAIpB,GAAqB,oBAG/CI,EAAYmC,EAAiBE,UAG7BC,EAAcF,IAAOD,GAAkBI,IAAI5C,EAAa,WAGxD6C,EAAeF,EAAYD,UAEjCjB,QAAQC,IAAI,qBAAsBc,EAAiBM,UACnDrB,QAAQC,IAAI,gBAAiBiB,EAAYG,UACzCrB,QAAQC,IAAI,yBAA0BrB,GACtCoB,QAAQC,IAAI,wBAAyBmB,GACrCzC,EAAqBC,GACrBD,EAAqByC,EAAa,EAKAR,UAAU,yBAAwBF,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLC,YAAY,cACZnB,KAAK,aACLC,MAAOrC,EAASG,WAChBqD,SAAUtB,EACVU,UAAU,0FAEZJ,EAAAA,EAAAA,KAAA,SACEc,KAAK,SACLC,YAAY,eACZnB,KAAK,cACLC,MAAOrC,EAASO,YAChBiD,SAAUtB,EACVU,UAAU,0FAGZD,EAAAA,EAAAA,MAAA,UACEN,MAAOrC,EAASI,gBAChBoD,SAAUtB,EACVE,KAAK,kBACLQ,UAAU,oEAAmEF,SAAA,EAE7EF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,GAAEK,SAAC,mBAnMV,CACf,iBACA,iBACA,mBAiMkBe,KAAI,CAACC,EAASC,KACtBnB,EAAAA,EAAAA,KAAA,UAAoBH,MAAOqB,EAAQhB,SAChCgB,GADUC,SAMjBnB,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,eACLC,MAAOrC,EAASK,aAChBmD,SAAUtB,EACVU,UAAU,qEAGXnC,IACC+B,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLC,YAAY,oBACZnB,KAAK,oBACLC,MAAOrC,EAASQ,kBAChBgD,SAAUtB,EACV0B,IAAI,QACJC,IAAI,QACJjB,UAAU,0FAIG,IAAhBnC,IACCkC,EAAAA,EAAAA,MAAA,UACEN,MAAOrC,EAASM,aAChBkD,SAAUtB,EACVE,KAAK,eACLQ,UAAU,oEAAmEF,SAAA,EAE7EF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,GAAEK,SAAC,gBAChB1C,EAASK,cA3NOQ,KAC3B,MAAMiD,EAAiB,GACvB,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAeE,KAAK,GAADpC,OAAImC,EAAC,QAE1B,OAAOD,CAAc,EAuNTG,CAAoBjE,EAASK,cAAcoD,KACzC,CAACS,EAAMP,KACLnB,EAAAA,EAAAA,KAAA,UAAoBH,MAAO6B,EAAKxB,SAC7BwB,GADUP,SAOvBnB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,2CAA0CF,SAAA,EACzDF,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLV,UAAU,sCACVuB,QAAS1D,EACT+C,SAnOOY,KACnB1D,GAAgBD,EAAY,KAoOlB+B,EAAAA,EAAAA,KAAA,QAAMI,UAAU,OAAMF,SAClBjC,EAA+B,cAAjB,uBAItB+B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAmBF,UAGhCF,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLV,UAAU,uGAAsGF,SACjH,2BAKLF,EAAAA,EAAAA,KAAA,UACEI,UAAU,4GACVyB,QAAUlC,GAAMpC,IAAa2C,SAC9B,cAIU,E,sGCpRnB,MAmJA,EAnJkB5C,IAOX,IAPY,QACjBwE,EAAO,KACPC,EAAI,eACJC,EAAc,IACdC,GAAM,EAAI,QACVC,GAAU,EAAI,WACdC,GAAW,GACZ7E,EACC,MAAO8E,EAAcC,IAAmB3E,EAAAA,EAAAA,UAAS,IAE3C4E,GAAQC,EAAAA,EAAAA,IAAc,CAC1BR,OACAD,UACAU,MAAO,CACLJ,gBAEFK,qBAAqBA,EAAAA,EAAAA,MACrBC,iBAAiBA,EAAAA,EAAAA,MACjBC,uBAAuBA,EAAAA,EAAAA,QAGzB,OACExC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCF,SAAA,CACpDgC,IACClC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCF,UACjDF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CACb/C,MAAmB,OAAZuC,QAAY,IAAZA,EAAAA,EAAgB,GACvBpB,SAAWnB,GAAUwC,EAAgBQ,OAAOhD,IAC5CO,UAAU,qEACVW,YAAY,4BAIjBkB,IACC9B,EAAAA,EAAAA,MAAA,UACE0B,QAAUlC,MACVS,UAAU,iEAAgEF,SAAA,EAE1EF,EAAAA,EAAAA,KAAC8C,EAAAA,IAAU,CAAC1C,UAAU,YAAY,kBAKxCJ,EAAAA,EAAAA,KAAA,OAAKI,UAAS,qIAAuIF,UACnJC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uEAAsEF,SAAA,EACrFF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,iBAAgBF,SAC9BoC,EAAMS,kBAAkB9B,KAAK+B,IAC5BhD,EAAAA,EAAAA,KAAA,MAAAE,SACG8C,EAAYC,QAAQhC,KAAKiC,IACxBlD,EAAAA,EAAAA,KAAA,MAAoBI,UAAU,yBAAwBF,UACnDiD,EAAAA,EAAAA,IACCD,EAAOE,OAAOC,UAAUH,OACxBA,EAAOI,eAHFJ,EAAOK,OAFXP,EAAYO,SAYzBvD,EAAAA,EAAAA,KAAA,SAAAE,SACGoC,EAAMkB,cAAcC,KAAKC,OACxBpB,EAAMkB,cAAcC,KAAKxC,KAAI,CAAC0C,EAAKpC,KACjCvB,EAAAA,EAAAA,KAAA,MAEEI,UAAS,uBAAAhB,OACPmC,EAAI,IAAM,EAAI,cAAgB,cAAa,wBAC3CrB,SAEDyD,EAAIC,kBAAkB3C,KAAK4C,IAC1B7D,EAAAA,EAAAA,KAAA,MAAkBI,UAAU,cAAaF,UACtCiD,EAAAA,EAAAA,IACCU,EAAKT,OAAOC,UAAUQ,KACtBA,EAAKP,eAHAO,EAAKN,OANXI,EAAIJ,OAgBbvD,EAAAA,EAAAA,KAAA,MAAII,UAAU,mBAAkBF,UAC9BF,EAAAA,EAAAA,KAAA,MAAI8D,QAAS,GAAG5D,SAAC,gCAO3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wGAAuGF,SAAA,EACpHF,EAAAA,EAAAA,KAAA,UACE6B,QAASA,KACPS,EAAMyB,cAAc,EAEtBC,UAAW1B,EAAM2B,qBACjB7D,UAAU,8DAA6DF,SAEtE,OAEHF,EAAAA,EAAAA,KAAA,UACE6B,QAASA,KACPS,EAAM4B,UAAU,EAElBF,UAAW1B,EAAM6B,iBACjB/D,UAAU,sDAAqDF,SAE9D,OAGHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DF,SAAA,EACxEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0BAAyBF,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACLC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,CACGoC,EAAM8B,WAAWC,WAAWC,UAAY,EAAE,MAAI,IAC9ChC,EAAMiC,sBAGXpE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0BAAyBF,SAAA,CAAC,iBAExCF,EAAAA,EAAAA,KAAA,SACEc,KAAK,SACL0D,aAAclC,EAAM8B,WAAWC,WAAWC,UAAY,EACtDtD,SAAWrB,IACT,MAAM8E,EAAO9E,EAAEG,OAAOD,MAAQ6E,OAAO/E,EAAEG,OAAOD,OAAS,EAAI,EAC3DyC,EAAMqC,aAAaF,EAAK,EAE1BrE,UAAU,+CAGdJ,EAAAA,EAAAA,KAAA,UACEH,MAAOyC,EAAM8B,WAAWC,WAAWO,SACnC5D,SAAWrB,IACT2C,EAAMuC,YAAYH,OAAO/E,EAAEG,OAAOD,OAAO,EAE3CO,UAAU,oCAAmCF,SAE5C,CAAC,GAAI,GAAI,GAAI,IAAIe,KAAK2D,IACrBzE,EAAAA,EAAAA,MAAA,UAAuBN,MAAO+E,EAAS1E,SAAA,CAAC,QAChC0E,IADKA,eAOjB,ECjGV,EAxDqBtH,IAAsC,IAArC,cAAEwH,EAAa,aAAEC,GAAczH,EACnD,OACE0C,EAAAA,EAAAA,KAAA,OAAKI,UAAU,2FAA0FF,UACvGC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCF,SAAA,EAElDF,EAAAA,EAAAA,KAAA,MAAII,UAAU,6BAA4BF,SAAC,0BAC3CC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASF,SAAA,EACrBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBAAoB,IAAEM,IAAOsE,EAAcE,WAAWnE,OAAO,2BAEvEV,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,cAAkB,IAAEM,IAAOsE,EAAcG,SAASpE,OAAO,2BAEnEV,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAAsB,IAAE4E,EAAcI,UAAUC,UAAU,IAAEL,EAAcI,UAAUE,aAE9FjF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,mBAAuB,IAAE4E,EAAcI,UAAUG,UAE3DlF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBAAqB,IAAE4E,EAAcQ,SAASH,UAAU,IAAEL,EAAcQ,SAASF,aAE3FjF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAAsB,IAAE4E,EAAcQ,SAASD,UAEzDlF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UAAc,IAAE4E,EAAczG,SAExC8B,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,4BAAgC,IAAE4E,EAAcS,yBAE1DpF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0BAA8B,IAAE4E,EAAcU,uBAExDrF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBAAqB,IAAE4E,EAAcW,gBAE/CtF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBAAoB,IAAEM,IAAOsE,EAAcY,WAAW7E,OAAO,2BAEvEV,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBAAoB,IAAEM,IAAOsE,EAAca,WAAW9E,OAAO,8BAIzEb,EAAAA,EAAAA,KAAA,UACEI,UAAU,4EACVyB,QAASA,IAAMkD,GAAa,GAAO7E,SACpC,cAIC,E,cCnDV,MAqEA,EArEoB5C,IAMb,IANc,KACnByE,EAAI,QACJD,EAAO,OACP8D,EAAM,aACNC,EAAY,aACZC,GACDxI,EAEC,OADEkC,QAAQC,IAAI,CAACmG,YAEbzF,EAAAA,EAAAA,MAAA4F,EAAAA,SAAA,CAAA7F,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACxBC,EAAAA,EAAAA,MAAA,QACEC,UAAU,8BACVC,SAAUwF,EAAa3F,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,SAAOgG,QAAQ,gBAAgB5F,UAAU,UAASF,SAAC,YAGnDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,wEAAuEF,UACpFF,EAAAA,EAAAA,KAACiG,EAAAA,IAAQ,CAAC7F,UAAU,iDAEtBJ,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLyC,GAAG,gBACHnD,UAAU,6QACVW,YAAY,iBACZmF,UAAQ,EACRrG,MAAO+F,EACP5E,SAAU8E,QAGd3F,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,iOAAgOF,SAAA,EAE1OF,EAAAA,EAAAA,KAAA,OACEI,UAAU,UACV,cAAY,OACZ+F,MAAM,6BACNC,KAAK,OACLC,QAAQ,YAAWnG,UAEnBF,EAAAA,EAAAA,KAAA,QACEsG,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,oDAGN1G,EAAAA,EAAAA,KAAA,QAAMI,UAAU,UAASF,SAAC,oBAIhCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAmBF,UAChCF,EAAAA,EAAAA,KAAC2G,EAAS,CACR7E,QAASA,EACTC,KAAMA,EACNE,KAAK,EACLC,SAAS,EACTC,YAAY,QAIf,ECuDP,EArH4B7E,IAA+B,IAA9B,OAAEsJ,EAAM,aAAE7B,GAAczH,EACnD,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCG,aAAc2C,MAASK,OAAO,cAC9B/C,aAAc,GACdC,YAAa,EACbC,kBAAmB,UAEf6I,GAAQC,EAAAA,EAAAA,KAAatE,GAAUA,EAAMuE,UAAUF,SAC9CG,EAAqBC,IAA0BvJ,EAAAA,EAAAA,UAAS,CAAC,IAW1D,UACJwJ,EAAS,aACTC,EAAY,YACZC,EAAW,KACXC,EAAI,QACJC,EAAO,QACPC,EAAO,WACPC,IACEC,EAAAA,EAAAA,KAeEC,EAAcC,UAClB,IACER,GAAa,GACb,MAAMS,QAAiBR,EAAY,yDAADhI,OACyBwH,EAAOiB,IAAG,UAAAzI,OAAS5B,EAASK,cACrF,MACA,KACA,CACEiK,cAAejB,IAGnB,IAAwB,IAApBe,EAASG,OAAkB,MAAM,IAAIC,MAAMJ,EAASL,SACxD/H,QAAQC,IAAImI,EAASL,SACrBN,EAAuBW,EAASL,SAEhCJ,GAAa,EACf,CAAE,MAAOc,GACPd,GAAa,GACbG,GAAQ,GACRE,EAAWS,EAAMV,QACnB,GAGF,OACEvH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gGAA+FF,UAC5GC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCF,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAII,UAAU,6BAA4BF,SAAC,6BAC3CF,EAAAA,EAAAA,KAAA,MAAII,UAAU,6BAA4BF,SAAA,OAAAd,OAASwH,EAAOzB,UAAS,KAAA/F,OAAIwH,EAAOxB,aAC9EjF,EAAAA,EAAAA,MAAA,QAAME,SAzCUV,IACpBA,EAAEW,iBACFd,QAAQC,IAAI,kBAAmBjC,GAE/B,MAAM,aAAEK,GAAiBL,EAGnB+C,EAAmBC,IAAO,GAADpB,OAAIvB,GAAgB,oBAEnD2B,QAAQC,IAAI,QAASc,EAAiBM,OAAO,cAAe+F,GAC5Dc,GAAa,EA+BqBtH,UAAU,yBAAwBF,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,eACLC,MAAOrC,EAASK,aAChBmD,SAjEYrB,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BrC,GAAasC,IAAQ,IAChBA,EACH,CAACH,GAAOC,KACP,EA6DKO,UAAU,sEAEZJ,EAAAA,EAAAA,KAACkI,EAAAA,EAAkB,CACjBhB,UAAWA,EACXG,KAAMA,EACNC,QAASA,EACTC,QAASA,KAEXvH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAmBF,UAChCF,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLV,UAAU,uGAAsGF,SACjH,uBAKLF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4BAA2BF,SACvC8G,GACCmB,OAAOC,QAAQpB,GAAqB/F,KAAIoH,IAAA,IAAEC,EAAMC,GAAUF,EAAA,OACxDlI,EAAAA,EAAAA,MAAA,OAAgBC,UAAU,oBAAmBF,SAAA,EAC3CC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,6BAA4BF,SAAA,CAAEoI,EAAK,SAClDC,GACCvI,EAAAA,EAAAA,KAACwI,EAAAA,IAAO,CAACpI,UAAU,oBAEnBJ,EAAAA,EAAAA,KAACyI,EAAAA,IAAO,CAACrI,UAAU,mBALbkI,EAOJ,OAGZtI,EAAAA,EAAAA,KAAA,UACEI,UAAU,4GACVyB,QAASA,IAAMkD,GAAa,GAAO7E,SACpC,cAIC,E,QC8IV,QA/PA,WACE,MAAM2G,GAAQC,EAAAA,EAAAA,KAAatE,GAAUA,EAAMuE,UAAUF,SAE9CrJ,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCwH,UAAW,GACXI,SAAU,GACVzH,aAAc2C,MAASK,OAAO,cAC9B9C,YAAa,GACbC,kBAAmB,QACnByH,YAAa,kBAIT/F,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BrC,GAAaiL,IAAS,IACjBA,EACH,CAAC9I,GAAOC,KACP,GAGC,UACJqH,EAAS,aACTC,EAAY,YACZC,EAAW,KACXC,EAAI,QACJC,EAAO,QACPC,EAAO,WACPC,IACEC,EAAAA,EAAAA,KAEEtJ,EAAwBC,IAC5B,MAAMC,EAAO,IAAIC,KAAKF,GAGhBG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAMN,EAAKO,UACXC,EAAQR,EAAKS,WACbC,EAAUV,EAAKW,aACfC,EAAUZ,EAAKa,aAGfC,EAAa,GAAAC,OAAMb,EAAI,KAAAa,OAAIX,EAAMY,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAIT,EACnEU,WACAC,SAAS,EAAG,MACTC,EAAa,GAAAH,OAAMP,EAAMQ,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAIL,EAC3DM,WACAC,SAAS,EAAG,KAAI,KAAAF,OAAIH,EAAQI,WAAWC,SAAS,EAAG,MAEtDE,QAAQC,IAAI,QAASN,GACrBK,QAAQC,IAAI,QAASF,EAAc,EAqErC,OACEY,EAAAA,EAAAA,MAAA4F,EAAAA,SAAA,CAAA7F,SAAA,EACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,GAAGC,SAnEFsH,UACnB,IACEhI,EAAEW,iBACFd,QAAQC,IAAIjC,GACZ,MAAM,UACJ0H,EAAS,SACTI,EAAQ,aACRzH,EAAY,YACZE,EAAW,kBACXC,GACER,EACJ,IACG0H,IACAI,IACAzH,IACAE,IACAC,EAED,MAAM,IAAIgK,MAAM,uBAElB,MAAMzH,EAAmBC,IAAO,GAADpB,OAC1BvB,EAAY,KAAAuB,OAAIpB,GACnB,oBAEFmJ,GAAa,GAEb,MAAM/I,EAAYmC,EAAiBE,UAG7BC,EACY,MAAhB3C,EACIyC,IAAOD,GAAkBI,IAAI5C,EAAc,GAAI,WAC/CyC,IAAOD,GAAkBI,IAAI5C,EAAa,WAE1C6C,EAAeF,EAAYD,UACjCjB,QAAQC,IAAI,qBAAsBc,EAAiBM,UACnDrB,QAAQC,IAAI,gBAAiBiB,EAAYG,UACzCrB,QAAQC,IAAI,yBAA0BrB,GACtCoB,QAAQC,IAAI,wBAAyBmB,GACrCzC,EAAqBC,GACrBD,EAAqByC,GACrB,MAAMgH,QAAiBR,EACrB,qCACA,OACAuB,KAAKC,UAAU,CACb1D,UAAWA,EACXI,SAAUA,EACVN,UAAW5G,EACX6G,QAASrE,EACT6E,YAAajI,EAASiI,cAExB,CAAE,eAAgB,mBAAoBqC,cAAejB,IAGvD,GADArH,QAAQC,IAAImI,IACY,IAApBA,EAASG,OAAkB,MAAM,IAAIC,MAAMJ,EAASL,SACxDJ,GAAa,GACbK,EAAW,uBACXF,GAAQ,EACV,CAAE,MAAOW,GACPd,GAAa,GACbG,GAAQ,GACRE,EAAWS,EAAMV,QACnB,GAK4CrH,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,YACLC,MAAOrC,EAAS0H,UAChBlE,SAAUtB,EACV6D,GAAG,YACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,YACR5F,UAAU,uYAAsYF,SACjZ,mBAKHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,WACLC,MAAOrC,EAAS8H,SAChBtE,SAAUtB,EACV6D,GAAG,WACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,WACR5F,UAAU,uYAAsYF,SACjZ,kBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,cACLC,MAAOrC,EAASiI,YAChBzE,SAAUtB,EACV6D,GAAG,cACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,cACR5F,UAAU,uYAAsYF,SACjZ,oBAKHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,eACLC,MAAOrC,EAASK,aAChBmD,SAAUtB,EACV6D,GAAG,eACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,eACR5F,UAAU,uYAAsYF,SACjZ,oBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,oBACLC,MAAOrC,EAASQ,kBAChBgD,SAAUtB,EACV6D,GAAG,oBACHnD,UAAU,kPACVW,YAAY,IACZK,IAAI,QACJC,IAAI,QACJ6E,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,oBACR5F,UAAU,uYAAsYF,SACjZ,oBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,SACLlB,KAAK,cACLC,MAAOrC,EAASO,YAChBiD,SAAUtB,EACV6D,GAAG,cACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,cACR5F,UAAU,uYAAsYF,SACjZ,2BAKHF,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLV,UAAU,wOAAuOF,SAClP,eAIHF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAACkI,EAAAA,EAAkB,CACjBhB,UAAWA,EACXK,QAASA,EACTF,KAAMA,EACNC,QAASA,QAKnB,E,cCsFA,QAjVA,SAA4BhK,GAA2B,IAA1B,QAAEuL,EAAO,WAAEtL,GAAYD,EAClD,MAAMuJ,GAAQC,EAAAA,EAAAA,KAAatE,GAAUA,EAAMuE,UAAUF,QACrDrH,QAAQC,IAAIoJ,EAAQtD,qBAAqBuD,MAAM,EAAG,IAElD,MAAOtL,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCwH,UAAW2D,EAAQ3D,UAAU2C,IAC7BvC,SAAUuD,EAAQvD,SAASuC,IAC3BhK,aAAc2C,MAASK,OAAOgI,EAAQxK,MACtCN,YAAa,GAEbC,kBAAmB6K,EAAQtD,qBAAqBuD,MAAM,EAAG,GACzDrD,YAAa,mBAGRX,EAAeiE,IAAoBrL,EAAAA,EAAAA,UAAS,OAC5CsL,EAAkBC,IAAuBvL,EAAAA,EAAAA,WAAS,IAClDwL,EAAiBC,IAAsBzL,EAAAA,EAAAA,WAAS,IAChD0L,EAAgBC,IAAmB3L,EAAAA,EAAAA,UAAS,MAEnD8B,QAAQC,IAAI,CAAEqF,gBAAe8B,OAAQiC,EAAQvD,WAE7C,MAAM5F,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BrC,GAAaiL,IAAS,IACjBA,EACH,CAAC9I,GAAOC,KACP,GAGC,UACJqH,EAAS,aACTC,EAAY,YACZC,EAAW,KACXC,EAAI,QACJC,EAAO,QACPC,EAAO,WACPC,IACEC,EAAAA,EAAAA,KAEEtJ,EAAwBC,IAC5B,MAAMC,EAAO,IAAIC,KAAKF,GAGhBG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAMN,EAAKO,UACXC,EAAQR,EAAKS,WACbC,EAAUV,EAAKW,aACfC,EAAUZ,EAAKa,aAGfC,EAAa,GAAAC,OAAMb,EAAI,KAAAa,OAAIX,EAAMY,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAIT,EACnEU,WACAC,SAAS,EAAG,MACTC,EAAa,GAAAH,OAAMP,EAAMQ,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAIL,EAC3DM,WACAC,SAAS,EAAG,KAAI,KAAAF,OAAIH,EAAQI,WAAWC,SAAS,EAAG,MAEtDE,QAAQC,IAAI,QAASN,GACrBK,QAAQC,IAAI,QAASF,EAAc,EAuErC,OACEY,EAAAA,EAAAA,MAAA4F,EAAAA,SAAA,CAAA7F,SAAA,EACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,WAAWC,SArEVsH,UACnB,IACEhI,EAAEW,iBACFd,QAAQC,IAAIjC,GACZgC,QAAQC,IAAI,CAAEoJ,YAEd,MAAM,UACJ3D,EAAS,SACTI,EAAQ,aACRzH,EAAY,YACZE,EAAW,kBACXC,GACER,EACJ,IACG0H,IACAI,IACAzH,IACAE,IACAC,EAED,MAAM,IAAIgK,MAAM,uBAElB,MAAMzH,EAAmBC,IAAO,GAADpB,OAC1BvB,EAAY,KAAAuB,OAAIpB,GACnB,oBAEFmJ,GAAa,GAEb,MAAM/I,EAAYmC,EAAiBE,UAG7BC,EACY,MAAhB3C,EACIyC,IAAOD,GAAkBI,IAAI5C,EAAc,GAAI,WAC/CyC,IAAOD,GAAkBI,IAAI5C,EAAa,WAE1C6C,EAAeF,EAAYD,UACjCjB,QAAQC,IAAI,qBAAsBc,EAAiBM,UACnDrB,QAAQC,IAAI,gBAAiBiB,EAAYG,UACzCrB,QAAQC,IAAI,yBAA0BrB,GACtCoB,QAAQC,IAAI,wBAAyBmB,GACrCzC,EAAqBC,GACrBD,EAAqByC,GACrB,MAAMgH,QAAiBR,EAAY,sCAADhI,OACMyJ,EAAQhB,KAC9C,MACAc,KAAKC,UAAU,CACb1D,UAAWA,EACXI,SAAUA,EACVN,UAAW5G,EACX6G,QAASrE,EACT6E,YAAajI,EAASiI,cAExB,CAAE,eAAgB,mBAAoBqC,cAAejB,IAGvD,GADArH,QAAQC,IAAImI,IACY,IAApBA,EAASG,OAAkB,MAAM,IAAIC,MAAMJ,EAASL,SACxDJ,GAAa,GACbK,EAAW,uBACXF,GAAQ,EACV,CAAE,MAAOW,GACPd,GAAa,GACbG,GAAQ,GACRE,EAAWS,EAAMV,QACnB,GAKoDrH,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BAENC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCF,SAAA,EAClDF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,YACLC,MAAOrC,EAAS0H,UAChBlE,SAAUtB,EACV6D,GAAG,YACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,YACR5F,UAAU,uYAAsYF,SACjZ,mBAKHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,WACLC,MAAOrC,EAAS8H,SAChBtE,SAAUtB,EACV6D,GAAG,WACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,WACR5F,UAAU,uYAAsYF,SACjZ,kBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,cACLC,MAAOrC,EAASiI,YAChBzE,SAAUtB,EACV6D,GAAG,cACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,cACR5F,UAAU,uYAAsYF,SACjZ,oBAKHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,eACLC,MAAOrC,EAASK,aAChBmD,SAAUtB,EACV6D,GAAG,eACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,eACR5F,UAAU,uYAAsYF,SACjZ,oBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLlB,KAAK,oBACLC,MAAOrC,EAASQ,kBAChBgD,SAAUtB,EACV6D,GAAG,oBACHnD,UAAU,kPACVW,YAAY,IACZK,IAAI,QACJC,IAAI,QACJ6E,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,oBACR5F,UAAU,uYAAsYF,SACjZ,oBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SACEc,KAAK,SACLlB,KAAK,cACLC,MAAOrC,EAASO,YAChBiD,SAAUtB,EACV6D,GAAG,cACHnD,UAAU,kPACVW,YAAY,IACZmF,UAAQ,KAEVlG,EAAAA,EAAAA,KAAA,SACEgG,QAAQ,cACR5F,UAAU,uYAAsYF,SACjZ,2BAKHF,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLV,UAAU,2IACyCF,SACpD,eAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEI,UAAU,2IAEVyB,QAAUlC,IACRpC,GAAW,GACX0L,GAAoB,EAAM,EAC1B/I,SACH,aAIHF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEI,UAAU,2IAEVyB,QAAS8F,UACPsB,GAAoB,GACpB,IACE,MAAMrB,QAAiBR,EACrB,4BAA8B5J,EAAS8H,SACvC,MACA,KACA,CACEwC,cAAejB,IAGnB,IAAwB,IAApBe,EAASG,OACX,MAAM,IAAIC,MAAMJ,EAASL,SAC3B/H,QAAQC,IAAI,CAAEmH,OAAQgB,EAASL,UAC/B8B,EAAgBzB,EAASL,SACzB4B,GAAmB,EACrB,CAAE,MAAOlB,GACPzI,QAAQC,IAAIwI,EAAMV,QACpB,GAEArH,SACH,mBAIHF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEI,UAAU,2IAEVyB,QAAUlC,IACRoJ,EAAiBF,GACjBI,GAAoB,EAAK,EACzB/I,SACH,sBAMJ8I,IACChJ,EAAAA,EAAAA,KAACsJ,EAAY,CACXxE,cAAeA,EACfC,aAAckE,IAGjBC,IACClJ,EAAAA,EAAAA,KAACuJ,EAAmB,CAClB3C,OAAQwC,EACRrE,aAAcoE,KAGlBnJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAACkI,EAAAA,EAAkB,CACjBhB,UAAWA,EACXK,QAASA,EACTF,KAAMA,EACNC,QAASA,QAKnB,E,cCpVA,MAQA,EAR6BhK,IAA8B,IAA7B,QAAEuL,EAAO,WAAEtL,GAAYD,EACnD,OACE0C,EAAAA,EAAAA,KAACwJ,EAAAA,EAAc,CAAAtJ,UACbF,EAAAA,EAAAA,KAACyJ,EAAmB,CAACZ,QAASA,EAAStL,WAAYA,KACpC,ECsBfmM,GAAYC,EAAAA,EAAAA,IAAgBnJ,KAG5BoJ,EAAUtM,IAAgB,IAAf,MAAEuM,GAAOvM,EACxB,OACE6C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0EAAyEF,SAAA,EACtFF,EAAAA,EAAAA,KAAA,MAAII,UAAU,yBAAwBF,SAAE2J,EAAMC,SAC9C3J,EAAAA,EAAAA,MAAA,MAAIC,UAAU,yBAAwBF,SAAA,CAAC,iBACtB2J,EAAME,kBAEvB5J,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQM,IAAOqJ,EAAMG,OAAOnJ,OAAO,4BACtCV,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,QAAMM,IAAOqJ,EAAMI,KAAKpJ,OAAO,4BAClCV,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,cAAY2J,EAAM3E,cACzC/E,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,gBAAc2J,EAAMK,YAC3C/J,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,aAAW2J,EAAMvE,aACxCnF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,eAAa2J,EAAMjD,WAC1C5G,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCF,UACjDC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,gBAAc2J,EAAMpE,mBAEzC,EAwdV,EApdwB0E,KACtB,MAAMtD,GAAQC,EAAAA,EAAAA,KAAatE,GAAUA,EAAMuE,UAAUF,QAE/CuD,EAAU5J,MAAS6J,QAAQ,OAAO1J,IAAI,EAAG,SAAS2J,SAElDC,EAAU/J,MAAS6J,QAAQ,OAAO1J,IAAI,GAAI,SAAS2J,UAGlDE,EAAeC,IAAoB/M,EAAAA,EAAAA,UAAS,KAC5CgN,EAAcC,IAAmBjN,EAAAA,EAAAA,UAAS,KAE1CkN,EAAQC,IAAanN,EAAAA,EAAAA,UAAS,KAC9BqE,EAAM+I,IAAWpN,EAAAA,EAAAA,UAAS,KAC1BqN,EAAaC,IAAkBtN,EAAAA,EAAAA,UAAS,KACxCuN,EAAYC,IAAiBxN,EAAAA,EAAAA,UAAS,KACtCyN,EAAWpG,IAAgBrH,EAAAA,EAAAA,WAAS,IACpC0N,EAAgBC,IAAqB3N,EAAAA,EAAAA,WAAS,IAC9CsL,EAAkBC,IAAuBvL,EAAAA,EAAAA,WAAS,IAClDwL,EAAiBC,IAAsBzL,EAAAA,EAAAA,WAAS,IAChDG,EAAcyN,IAAmB5N,EAAAA,EAAAA,UAAS,OAC1C0L,EAAgBC,IAAmB3L,EAAAA,EAAAA,UAAS,OAE5C6N,EAAYC,IAAiB9N,EAAAA,EAAAA,UAAS,KAQtCoH,EAAeiE,IAAoBrL,EAAAA,EAAAA,UAAS,OAC5C+N,GAAcC,KAAmBhO,EAAAA,EAAAA,UAAS,SAC3CiO,IAAeC,EAAAA,EAAAA,OAGdC,GAAeC,KAAoBpO,EAAAA,EAAAA,WAAS,IAC5CqO,GAAiBC,KAAsBtO,EAAAA,EAAAA,UAAS,MAEjDoE,GAAU,CACd6J,GAAaM,SAAS,MAAO,CAAE/I,OAAQ,OAOvCyI,GAAaM,SAAS,kBAAmB,CAAE/I,OAAQ,kBAKnDyI,GAAaM,SAAS,iBAAkB,CAAE/I,OAAQ,iBAClDyI,GAAaM,SAAS,OAAQ,CAAE/I,OAAQ,SACxCyI,GAAaM,SAAS,uBAAwB,CAC5C/I,OAAQ,2BAEVyI,GAAaM,SAAS,qBAAsB,CAC1C/I,OAAQ,yBAEVyI,GAAaM,SAAS,OAAQ,CAC5B/I,OAAQ,OACRW,KAAOqI,IAEHlM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mCAAkCF,UAC/CF,EAAAA,EAAAA,KAAA,UACE6B,QAASA,KACPrC,QAAQC,IAAIyM,EAAKvI,IAAIwI,UACrBpD,EAAiBmD,EAAKvI,IAAIwI,UAC1BlD,GAAoB,EAAK,EAE3B7I,UAAU,8HAC0CF,UAEpDF,EAAAA,EAAAA,KAACoM,EAAAA,IAAU,UAOrBT,GAAaM,SAAS,OAAQ,CAC5B/I,OAAQ,OACRW,KAAOqI,IAEHlM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mCAAkCF,UAC/CF,EAAAA,EAAAA,KAAA,UACE6B,QAASA,KACPrC,QAAQC,IAAIyM,EAAKvI,IAAIwI,UACrBH,GAAmBE,EAAKvI,IAAIwI,UAC5BL,IAAiB,EAAK,EAExB1L,UAAU,8HAC0CF,UAEpDF,EAAAA,EAAAA,KAACqM,EAAAA,IAAM,UAOjBV,GAAaM,SAAS,SAAU,CAC9B/I,OAAQ,SACRW,KAAOqI,IAEHlM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mCAAkCF,UAC/CF,EAAAA,EAAAA,KAAA,UACE6B,QAAS8F,UACPnI,QAAQC,IAAIyM,EAAKvI,IAAIwI,UACrB,IACEhF,IAAa,GACb,MAAMS,QAAiBR,GAAY,sCAADhI,OACM8M,EAAKvI,IAAIwI,SAAStE,KACxD,SACA,KACA,CAAEC,cAAejB,IAGnB,GADArH,QAAQC,IAAImI,IACY,IAApBA,EAASG,OACX,MAAM,IAAIC,MAAMJ,EAASL,SAE3BuD,GAAS/K,GACPA,EAASuM,QACNC,GAASA,EAAK1E,MAAQqE,EAAKvI,IAAIwI,SAAStE,QAG7CV,IAAa,GACbK,GAAW,uBACXF,IAAQ,EACV,CAAE,MAAOW,GACPd,IAAa,GACbG,IAAQ,GACRE,GAAWS,EAAMV,QACnB,GAEFnH,UAAU,6HAA4HF,UAEtIF,EAAAA,EAAAA,KAACwM,EAAAA,IAAO,WAUdC,GAAiB,CACrBd,GAAaM,SAAS,MAAO,CAAE/I,OAAQ,OACvCyI,GAAaM,SAAS,YAAa,CAAE/I,OAAQ,eAC7CyI,GAAaM,SAAS,WAAY,CAAE/I,OAAQ,cAC5CyI,GAAaM,SAAS,QAAS,CAAE/I,OAAQ,UACzCyI,GAAaM,SAAS,cAAe,CAAE/I,OAAQ,kBAG3CwJ,GAAgB,CACpBf,GAAaM,SAAS,MAAO,CAAE/I,OAAQ,OACvCyI,GAAaM,SAAS,YAAa,CAAE/I,OAAQ,eAC7CyI,GAAaM,SAAS,WAAY,CAAE/I,OAAQ,cAC5CyI,GAAaM,SAAS,QAAS,CAAE/I,OAAQ,UACzCyI,GAAaM,SAAS,cAAe,CAAE/I,OAAQ,iBAC/CyI,GAAaM,SAAS,iBAAkB,CAAE/I,OAAQ,mBAClDyI,GAAaM,SAAS,sBAAuB,CAAE/I,OAAQ,eACvDyI,GAAaM,SAAS,SAAU,CAC9B/I,OAAQ,iBACRW,KAAOqI,IAEHlM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mCAAkCF,UAC/CF,EAAAA,EAAAA,KAAA,UACE6B,QAAUlC,IACRH,QAAQC,IAAIyM,EAAKvI,IAAIwI,UACrBhD,GAAmB,GACnBE,EAAgB6C,EAAKvI,IAAIwI,SAAS,EAEpC/L,UAAU,6HAA4HF,UAEtIF,EAAAA,EAAAA,KAAC2M,EAAAA,IAAW,YAQlB,UACJzF,GAAS,aACTC,GAAY,YACZC,GAAW,KACXC,GAAI,QACJC,GAAO,QACPC,GAAO,WACPC,KACEC,EAAAA,EAAAA,MAEE,YAAEmF,GAAW,MAAEC,KAAUC,EAAAA,EAAAA,UAC7B,MACEF,YAAa,IAAItO,KACjBuO,MAAO,CAACE,EAAAA,GAAMC,MAAOD,EAAAA,GAAME,IAAKF,EAAAA,GAAMG,WAExC,IAkBIC,GAAoBxF,UACxB,IACER,IAAa,GACb,MAAMS,QAAiBR,GACrB,sCACA,MACA,KACA,CAAEU,cAAejB,IAGnB,GADArH,QAAQC,IAAImI,IACY,IAApBA,EAASG,OAAkB,MAAM,IAAIC,MAAMJ,EAASL,SACxDuD,EAAQlD,EAASL,SACjB,MAAM6F,EAASxF,EAASL,QAAQtG,KAAK4H,IAC5B,CACLiB,MAAOjB,EAAQ3D,UAAUC,UAAY,IAAM0D,EAAQ3D,UAAUE,SAC7D4E,MAAO,IAAI1L,KAAKuK,EAAQ7D,WACxBiF,IAAK,IAAI3L,KAAKuK,EAAQ5D,SACtB8E,cAAelB,EAAQhB,IACvB3C,UAAW2D,EAAQ3D,UAAU2C,IAC7BqC,QACErB,EAAQ3D,UAAUC,UAAY,IAAM0D,EAAQ3D,UAAUE,SACxDE,SAAUuD,EAAQvD,SAASuC,IAC3BjB,OAAQiC,EAAQvD,SAASH,UAAY,IAAM0D,EAAQvD,SAASF,SAC5DK,YAAaoD,EAAQpD,gBAGzBjG,QAAQC,IAAI2N,GACZvC,EAAUuC,GACVC,YAAW,KACTlG,IAAa,EAAM,GAClB,IACL,CAAE,MAAOc,GACPd,IAAa,GACbG,IAAQ,GACRE,GAAWS,EAAMV,QACnB,GA2BI+F,IAAqBC,EAAAA,EAAAA,cACxB5N,IACCgL,EAAgBhL,EAAEG,OAAOD,MAAM,GAEjC,CAAC6K,IAEG8C,IAAqBD,EAAAA,EAAAA,cACxB1D,IACCA,EAAMvJ,iBACNd,QAAQC,IAAIiL,GAjCK/C,WACnB,IACE,IAAK+C,EAAc,OACnBvD,IAAa,GACb,MAAMS,QAAiBR,GAAY,oCAADhI,OACIsL,GACpC,MACA,KACA,CACE5C,cAAejB,IAInB,GADArH,QAAQC,IAAImI,IACY,IAApBA,EAASG,OAAkB,MAAM,IAAIC,MAAMJ,EAASL,SACxD2D,EAActD,EAASL,SACvBJ,IAAa,EACf,CAAE,MAAOc,GACPd,IAAa,GACbG,IAAQ,GACRE,GAAWS,EAAMV,QACnB,GAcEkG,EAAc,GAEhB,CAAC/C,IA4BGgD,IAAsBH,EAAAA,EAAAA,cACzB5N,IACC8K,EAAiB9K,EAAEG,OAAOD,MAAM,GAElC,CAAC2K,IAEGmD,IAAsBJ,EAAAA,EAAAA,cACzB1D,IACCA,EAAMvJ,iBACNd,QAAQC,IAAI+K,GAjCM7C,WACpB,IACE,IAAK6C,EAAe,OACpBrD,IAAa,GACb,MAAMS,QAAiBR,GAAY,sCAADhI,OACMoL,GACtC,MACA,KACA,CACE1C,cAAejB,IAInB,GADArH,QAAQC,IAAImI,IACY,IAApBA,EAASG,OAAkB,MAAM,IAAIC,MAAMJ,EAASL,SACxDyD,EAAepD,EAASL,SACxBJ,IAAa,EACf,CAAE,MAAOc,GACPd,IAAa,GACbG,IAAQ,GACRE,GAAWS,EAAMV,QACnB,GAcEqG,EAAe,GAEjB,CAACpD,IAMH,OAJAqD,EAAAA,EAAAA,YAAU,KACRV,IAAmB,GAClB,KAGDnN,EAAAA,EAAAA,KAAC8N,EAAAA,EAAgB,CAAA5N,UACfC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8EAA6EF,SAAA,EAC1FF,EAAAA,EAAAA,KAAC+N,EAAAA,EAAM,CAACjE,MAAO,8BACf9J,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBC,EAAAA,EAAAA,MAAA,UACE0B,QAAUlC,IACRwN,IAAmB,EAErB/M,UAAU,8HAC4CF,SAAA,EAEtDF,EAAAA,EAAAA,KAACgO,EAAAA,IAAgB,CAACC,KAAM,KAAM,gBAKlCjO,EAAAA,EAAAA,KAAA,OAAKI,UAAU,wDAAuDF,UAClEiL,IACCC,IACApC,IACAE,IACClJ,EAAAA,EAAAA,KAACkO,EAAAA,GAAQ,CACPxE,UAAWA,EACXkB,OAAQA,EACRuD,cAAc,QACdC,YAAY,MACZC,YAAY,EACZC,cAnKazE,IACzBrK,QAAQC,IAAIoK,GACZd,EAAiBc,GACjBwB,GAAkB,EAAK,EAiKXkD,aAtVY5O,IACxBH,QAAQC,IAAIE,EAAEqK,OAEdsB,EAAgB3L,EAAEqK,MAAM,EAoVZwE,WAAY,CACV3E,MAAwB,WAAjB4B,GAA4B7B,OAAU6E,GAE/CrN,IAAKgJ,EACL/I,IAAKkJ,EACLqC,YAAaA,GACb8B,OArKYC,IACxBnP,QAAQC,IAAIkP,GACZjD,GAAgBiD,EAAK,EAoKTC,YAAanD,GACboB,MAAOA,GACPgC,KAAM,OAIb1D,IAAanL,EAAAA,EAAAA,KAAC8O,EAAY,CAACvR,WAvKfA,KACjBwH,GAAa,EAAM,IAuKdqG,IACCpL,EAAAA,EAAAA,KAAC+O,EAAAA,EAAU,CACTjK,cAAeA,EACfC,aAAcsG,IAGjBrC,IACChJ,EAAAA,EAAAA,KAACsJ,EAAY,CACXxE,cAAeA,EACfC,aAAckE,IAGjBC,IACClJ,EAAAA,EAAAA,KAACuJ,EAAmB,CAClB3C,OAAQwC,EACRrE,aAAcoE,IAGjB0C,KACC7L,EAAAA,EAAAA,KAACgP,EAAoB,CACnBzR,WAAYuO,GACZjD,QAASkD,MAGb/L,EAAAA,EAAAA,KAACkI,EAAAA,EAAkB,CACjBhB,UAAWA,GACXG,KAAMA,GACNC,QAASA,GACTC,QAASA,MAETL,KACA/G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BF,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAII,UAAU,oBAAmBF,SAAC,wBAClCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAASF,UACpBgH,KACAlH,EAAAA,EAAAA,KAAC2G,EAAS,CACR7E,QAASA,GACTC,KAAMA,EACNE,KAAK,EACLE,YAAY,UAQtBhC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,MAAII,UAAU,WAAUF,SAAC,wBAEzBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,yEAAwEF,SAAA,CAAC,iBACrE,QAEjBF,EAAAA,EAAAA,KAACiP,EAAW,CACVnN,QAAS2K,GACT1K,KAAMgJ,EACNnF,OAAQ4E,EACR3E,aAAc8H,GACd7H,aAAc4H,SAIlBvN,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,yEAAwEF,SAAA,CAAC,gBACtE,QAEhBF,EAAAA,EAAAA,KAACiP,EAAW,CACVnN,QAAS4K,GACT3K,KAAMkJ,EACNrF,OAAQ8E,EACR7E,aAAc2H,GACd1H,aAAcwH,SAGlBnN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0BAELF,EAAAA,EAAAA,KAACkP,EAAM,cAII,C,yDCngBvB,MA6BA,EA7BuB5R,IAKhB,IAJLuC,MAAOsP,EAAS,SAChBnO,EAAQ,SACRoO,EAAW,OACRC,GACJ/R,EACC,MAAOuC,EAAOyP,IAAY5R,EAAAA,EAAAA,UAASyR,GAcnC,OAZAtB,EAAAA,EAAAA,YAAU,KACRyB,EAASH,EAAU,GAClB,CAACA,KAGJtB,EAAAA,EAAAA,YAAU,KACR,MAAM0B,EAAUlC,YAAW,KACzBrM,EAASnB,EAAM,GACduP,GACH,MAAO,IAAMI,aAAaD,EAAQ,GACjC,CAAC1P,KAGFG,EAAAA,EAAAA,KAAA,YACMqP,EACJxP,MAAOA,EACPmB,SAAWrB,GAAM2P,EAAS3P,EAAEG,OAAOD,QACnC,C,iGCdN,MAmJA,EAnJgBvC,IAOT,IAPU,QACfwE,EAAO,KACPC,EAAI,eACJC,EAAc,IACdC,GAAM,EAAI,QACVC,GAAU,EAAI,WACdC,GAAW,GACZ7E,EACC,MAAO8E,EAAcC,IAAmB3E,EAAAA,EAAAA,UAAS,IAE3C4E,GAAQC,EAAAA,EAAAA,IAAc,CAC1BR,OACAD,UACAU,MAAO,CACLJ,gBAEFK,qBAAqBA,EAAAA,EAAAA,MACrBC,iBAAiBA,EAAAA,EAAAA,MACjBC,uBAAuBA,EAAAA,EAAAA,QAGzB,OACExC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCF,SAAA,CACpDgC,IACClC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qCAAoCF,UACjDF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CACb/C,MAAmB,OAAZuC,QAAY,IAAZA,EAAAA,EAAgB,GACvBpB,SAAWnB,GAAUwC,EAAgBQ,OAAOhD,IAC5CO,UAAU,qEACVW,YAAY,4BAIjBkB,IACC9B,EAAAA,EAAAA,MAAA,UACE0B,QAAUlC,MACVS,UAAU,iEAAgEF,SAAA,EAE1EF,EAAAA,EAAAA,KAAC8C,EAAAA,IAAU,CAAC1C,UAAU,YAAY,kBAKxCJ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qIAAoIF,UACjJC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uEAAsEF,SAAA,EACrFF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,iBAAgBF,SAC9BoC,EAAMS,kBAAkB9B,KAAK+B,IAC5BhD,EAAAA,EAAAA,KAAA,MAAAE,SACG8C,EAAYC,QAAQhC,KAAKiC,IACxBlD,EAAAA,EAAAA,KAAA,MAAoBI,UAAU,yBAAwBF,UACnDiD,EAAAA,EAAAA,IACCD,EAAOE,OAAOC,UAAUH,OACxBA,EAAOI,eAHFJ,EAAOK,OAFXP,EAAYO,SAYzBvD,EAAAA,EAAAA,KAAA,SAAAE,SACGoC,EAAMkB,cAAcC,KAAKC,OACxBpB,EAAMkB,cAAcC,KAAKxC,KAAI,CAAC0C,EAAKpC,KACjCvB,EAAAA,EAAAA,KAAA,MAEEI,UAAS,uBAAAhB,OACPmC,EAAI,IAAM,EAAI,cAAgB,cAAa,wBAC3CrB,SAEDyD,EAAIC,kBAAkB3C,KAAK4C,IAC1B7D,EAAAA,EAAAA,KAAA,MAAkBI,UAAU,cAAaF,UACtCiD,EAAAA,EAAAA,IACCU,EAAKT,OAAOC,UAAUQ,KACtBA,EAAKP,eAHAO,EAAKN,OANXI,EAAIJ,OAgBbvD,EAAAA,EAAAA,KAAA,MAAII,UAAU,mBAAkBF,UAC9BF,EAAAA,EAAAA,KAAA,MAAI8D,QAAS,GAAG5D,SAAC,gCAO3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wGAAuGF,SAAA,EACpHF,EAAAA,EAAAA,KAAA,UACE6B,QAASA,KACPS,EAAMyB,cAAc,EAEtBC,UAAW1B,EAAM2B,qBACjB7D,UAAU,8DAA6DF,SAEtE,OAEHF,EAAAA,EAAAA,KAAA,UACE6B,QAASA,KACPS,EAAM4B,UAAU,EAElBF,UAAW1B,EAAM6B,iBACjB/D,UAAU,sDAAqDF,SAE9D,OAGHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4DAA2DF,SAAA,EACxEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0BAAyBF,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACLC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,CACGoC,EAAM8B,WAAWC,WAAWC,UAAY,EAAE,MAAI,IAC9ChC,EAAMiC,sBAGXpE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0BAAyBF,SAAA,CAAC,iBAExCF,EAAAA,EAAAA,KAAA,SACEc,KAAK,SACL0D,aAAclC,EAAM8B,WAAWC,WAAWC,UAAY,EACtDtD,SAAWrB,IACT,MAAM8E,EAAO9E,EAAEG,OAAOD,MAAQ6E,OAAO/E,EAAEG,OAAOD,OAAS,EAAI,EAC3DyC,EAAMqC,aAAaF,EAAK,EAE1BrE,UAAU,+CAGdJ,EAAAA,EAAAA,KAAA,UACEH,MAAOyC,EAAM8B,WAAWC,WAAWO,SACnC5D,SAAWrB,IACT2C,EAAMuC,YAAYH,OAAO/E,EAAEG,OAAOD,OAAO,EAE3CO,UAAU,oCAAmCF,SAE5C,CAAC,GAAI,GAAI,GAAI,IAAIe,KAAK2D,IACrBzE,EAAAA,EAAAA,MAAA,UAAuBN,MAAO+E,EAAS1E,SAAA,CAAC,QAChC0E,IADKA,eAOjB,C,0ECzJV,MA4BA,EA5BmBtH,IAAsC,IAArC,cAAEwH,EAAa,aAAEC,GAAczH,EACjD,OACE0C,EAAAA,EAAAA,KAAA,OAAKI,UAAU,2FAA0FF,UACvGC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCF,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAII,UAAU,yBAAwBF,SAAE4E,EAAcgF,SACtD3J,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,kBAAgB4E,EAAciF,kBACrD5J,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,UACbM,IAAOsE,EAAckF,OAAOnJ,OAAO,4BAE7CV,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,QACfM,IAAOsE,EAAcmF,KAAKpJ,OAAO,4BAEzCV,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,cAAY4E,EAAcI,cACjD/E,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,gBAAc4E,EAAcoF,YACnD/J,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,aAAW4E,EAAcQ,aAChDnF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASF,SAAA,CAAC,eAAa4E,EAAc8B,WAElD5G,EAAAA,EAAAA,KAAA,UACEI,UAAU,4EACVyB,QAASA,IAAMkD,GAAa,GAAO7E,SACpC,cAIC,C,uDCzBV,MAQA,EARqB5C,IAAmB,IAAlB,SAAE4C,GAAU5C,EAChC,OACE0C,EAAAA,EAAAA,KAAA,OAAKI,UAAU,wEAAuEF,UACpFF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCF,SAAEA,KACnD,C,uDCJV,MAQA,EARuB5C,IAAmB,IAAlB,SAAE4C,GAAU5C,EAClC,OACE0C,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gGAA+FF,UAC5GF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sCAAqCF,SAAEA,KAClD,C","sources":["Components/models/BookingModal.js","Components/MyTable/MyTableV1.js","Components/models/EventModalV1.js","Components/SharedTables/SharedTable.js","Components/models/DoctorScheduleModal.js","Components/Forms/MyFormv1.js","Components/Forms/EditAppointmentForm.js","Components/models/EditAppointmentModal.js","Components/Home/BookAppointment.js","Components/MyTable/DebouncedInput.js","Components/MyTable/MyTable.js","Components/models/EventModal.js","Components/models/ModalWrapper.js","Components/models/ModalWrapperV1.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ModalWrapper from \"./ModalWrapper\";\r\nimport moment from \"moment\";\r\n\r\nconst BookingModal = ({ closeModal }) => {\r\n  const [formData, setFormData] = useState({\r\n    customerId: \"\",\r\n    selectedService: \"\",\r\n    selectedDate: \"\",\r\n    selectedTime: \"\",\r\n    sessionTime: 0,\r\n    manuallyAddedTime: \"08:00\",\r\n  });\r\n  \r\n  const [switchState, setSwitchState] = useState(false);\r\n\r\n  const services = [\r\n    \"Dental Consult\",\r\n    \"Teeth Cleaning\",\r\n    \"Teeth Whitening\",\r\n    // Add more services as needed\r\n  ];\r\n\r\n  const serviceDurations = {\r\n    \"Dental Consult\": 30, // in minutes\r\n    \"Teeth Cleaning\": 60, // in minutes\r\n    \"Teeth Whitening\": 40, // in minutes\r\n    // Add more services and durations as needed\r\n  };\r\n  const fetchAvailableTimes = (date) => {\r\n    const availableTimes = [];\r\n    for (let i = 8; i <= 16; i++) {\r\n      availableTimes.push(`${i}:00`);\r\n    }\r\n    return availableTimes;\r\n  };\r\n  // Function to handle switch toggle\r\n  const toggleSwitch = () => {\r\n    setSwitchState(!switchState);\r\n  };\r\n\r\n  const extractFromTimeStamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n\r\n    // Extract the date and time components\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1; // Months are zero-indexed, so we add 1\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    // Format the date and time as needed\r\n    const formattedDate = `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n    const formattedTime = `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\r\n\r\n    console.log(\"Date:\", formattedDate);\r\n    console.log(\"Time:\", formattedTime);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmitV1 = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form submitted:\", formData);\r\n\r\n    // Ensure leading zeros for single-digit hours\r\n    const formattedTime = formData.selectedTime.padStart(5, \"0\"); // Add leading zero if needed\r\n\r\n    // Combine date and formatted time strings into a single string\r\n    const dateTimeString = formData.selectedDate + \"T\" + formattedTime;\r\n\r\n    // Create a Date object from the combined date and time string\r\n    const selectedDateTime = new Date(dateTimeString);\r\n\r\n    // Get timestamp in milliseconds\r\n    const timestamp = selectedDateTime.getTime();\r\n    const durationInMinutes = serviceDurations[formData.selectedService];\r\n\r\n    // Calculate end date and time\r\n    const endDateTime = new Date(\r\n      selectedDateTime.getTime() + durationInMinutes * 60000\r\n    ); // Convert minutes to milliseconds\r\n\r\n    // Get end timestamp\r\n    const endTimestamp = endDateTime.getTime();\r\n\r\n    console.log(\"Selected DateTime:\", selectedDateTime);\r\n    console.log(\"End DateTime:\", endDateTime);\r\n    console.log(\"Timestamp for booking:\", timestamp);\r\n    console.log(\"Timestamp for ending:\", endTimestamp);\r\n\r\n    // Perform further processing if needed\r\n    extractFromTimeStamp(timestamp);\r\n    extractFromTimeStamp(endTimestamp);\r\n  };\r\n\r\n  const handleSubmitV2 = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form submitted:\", formData);\r\n\r\n    const { selectedDate, selectedTime, sessionTime } = formData;\r\n\r\n    // Combine date and time strings into a single moment object\r\n    const selectedDateTime = moment(\r\n      `${selectedDate} ${selectedTime}`,\r\n      \"YYYY-MM-DD HH:mm\"\r\n    );\r\n\r\n    // Get timestamp in milliseconds\r\n    const timestamp = selectedDateTime.valueOf();\r\n\r\n    // Calculate end date and time using sessionTime\r\n    const endDateTime = moment(selectedDateTime).add(sessionTime, \"minutes\");\r\n\r\n    // Get end timestamp\r\n    const endTimestamp = endDateTime.valueOf();\r\n\r\n    console.log(\"Selected DateTime:\", selectedDateTime.format());\r\n    console.log(\"End DateTime:\", endDateTime.format());\r\n    console.log(\"Timestamp for booking:\", timestamp);\r\n    console.log(\"Timestamp for ending:\", endTimestamp);\r\n    extractFromTimeStamp(timestamp);\r\n    extractFromTimeStamp(endTimestamp);\r\n  };\r\n  const parseManuallyAddedTime = (value) => {\r\n    try {\r\n      const [hours, minutes] = value.split(\":\").map(Number);\r\n      if ((hours >= 0 && minutes <= 59) === false) return false;\r\n      console.log(hours, minutes);\r\n      // Ensure hours are within 0-23 range\r\n      const validHours = Math.min(Math.max(0, hours), 23);\r\n      // Ensure minutes are within 0-59 range\r\n      const validMinutes = Math.min(Math.max(0, minutes), 59);\r\n\r\n      console.log(\r\n        `${validHours.toString().padStart(2, \"0\")}:${validMinutes\r\n          .toString()\r\n          .padStart(2, \"0\")}`\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form submitted:\", formData);\r\n\r\n    const { selectedDate, selectedTime, sessionTime, manuallyAddedTime } =\r\n      formData;\r\n    // parseManuallyAddedTime(manuallyAddedTime);\r\n    // Combine date and time strings into a single moment object\r\n    const selectedDateTime =\r\n      switchState === false\r\n        ? moment(`${selectedDate} ${selectedTime}`, \"YYYY-MM-DD HH:mm\")\r\n        : moment(`${selectedDate} ${manuallyAddedTime}`, \"YYYY-MM-DD HH:mm\");\r\n\r\n    // Get timestamp in milliseconds\r\n    const timestamp = selectedDateTime.valueOf();\r\n\r\n    // Calculate end date and time using sessionTime\r\n    const endDateTime = moment(selectedDateTime).add(sessionTime, \"minutes\");\r\n\r\n    // Get end timestamp\r\n    const endTimestamp = endDateTime.valueOf();\r\n\r\n    console.log(\"Selected DateTime:\", selectedDateTime.format());\r\n    console.log(\"End DateTime:\", endDateTime.format());\r\n    console.log(\"Timestamp for booking:\", timestamp);\r\n    console.log(\"Timestamp for ending:\", endTimestamp);\r\n    extractFromTimeStamp(timestamp);\r\n    extractFromTimeStamp(endTimestamp);\r\n  };\r\n  return (\r\n    <ModalWrapper>\r\n      <div className=\"bg-white p-5 rounded-lg\">\r\n        <form onSubmit={handleSubmit} className=\"space-y-4 md:space-y-6\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Customer ID\"\r\n            name=\"customerId\"\r\n            value={formData.customerId}\r\n            onChange={handleChange}\r\n            className=\"input-field p-3 flex w-full rounded-md text-black border-solid border-2 border-black\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Session Time\"\r\n            name=\"sessionTime\"\r\n            value={formData.sessionTime}\r\n            onChange={handleChange}\r\n            className=\"input-field p-3 flex w-full rounded-md text-black border-solid border-2 border-black\"\r\n          />\r\n\r\n          <select\r\n            value={formData.selectedService}\r\n            onChange={handleChange}\r\n            name=\"selectedService\"\r\n            className=\"select-field border-solid border-2 border-black rounded-lg w-full\"\r\n          >\r\n            <option value=\"\">Select Service</option>\r\n            {services.map((service, index) => (\r\n              <option key={index} value={service}>\r\n                {service}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <input\r\n            type=\"date\"\r\n            name=\"selectedDate\"\r\n            value={formData.selectedDate}\r\n            onChange={handleChange}\r\n            className=\"input-field border-solid border-2 border-black rounded-lg w-full\"\r\n          />\r\n\r\n          {switchState && (\r\n            <input\r\n              type=\"time\"\r\n              placeholder=\"Manually Add Time\"\r\n              name=\"manuallyAddedTime\"\r\n              value={formData.manuallyAddedTime}\r\n              onChange={handleChange}\r\n              min=\"08:00\" \r\n              max=\"16:00\"\r\n              className=\"input-field p-3 flex w-full rounded-md text-black border-solid border-2 border-black\"\r\n            />\r\n          )}\r\n\r\n          {switchState === false && (\r\n            <select\r\n              value={formData.selectedTime}\r\n              onChange={handleChange}\r\n              name=\"selectedTime\"\r\n              className=\"select-field border-solid border-2 border-black rounded-lg w-full\"\r\n            >\r\n              <option value=\"\">Select Time</option>\r\n              {formData.selectedDate &&\r\n                fetchAvailableTimes(formData.selectedDate).map(\r\n                  (time, index) => (\r\n                    <option key={index} value={time}>\r\n                      {time}\r\n                    </option>\r\n                  )\r\n                )}\r\n            </select>\r\n          )}\r\n          <div className=\"pt-2\">\r\n            <label className=\" inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-checkbox h-5 w-5 text-gray-600\"\r\n                checked={switchState}\r\n                onChange={toggleSwitch}\r\n              />\r\n              <span className=\"ml-2\">\r\n                {!switchState ? \"Manually Add\" : \"Select Time\"}\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            {/* Render the button only if the customerId is available */}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-[#4cceac] text-white px-4 py-2 rounded-md hover:bg-hoverColor transition duration-300 ease-in-out\"\r\n            >\r\n              Book Appointment\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <button\r\n          className=\"mt-2 bg-[#4cceac] text-white px-4 py-2 rounded-md hover:bg-hoverColor transition duration-300 ease-in-out\"\r\n          onClick={(e) => closeModal()}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </ModalWrapper>\r\n  );\r\n};\r\nexport default BookingModal;\r\n","import React, { useState } from \"react\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\n\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport DebouncedInput from \"./DebouncedInput\";\r\n\r\nconst MyTableV1 = ({\r\n  columns,\r\n  data,\r\n  handleDownload,\r\n  flg = true,\r\n  inpflag = true,\r\n  heightFlag=false\r\n}) => {\r\n  const [globalFilter, setGlobalFilter] = useState(\"\");\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: {\r\n      globalFilter,\r\n    },\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-2 text-white \">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        {inpflag && (\r\n          <div className=\"flex items-center gap-2 text-black\">\r\n            <DebouncedInput\r\n              value={globalFilter ?? \"\"}\r\n              onChange={(value) => setGlobalFilter(String(value))}\r\n              className=\"p-2 bg-transparent outline-none border-b-2 focus:border-indigo-500\"\r\n              placeholder=\"Search all columns...\"\r\n            />\r\n          </div>\r\n        )}\r\n        {flg && (\r\n          <button\r\n            onClick={(e) => {}}\r\n            className=\"p-2 bg-green-500 rounded-md text-white flex items-center gap-1\"\r\n          >\r\n            <BsDownload className=\"w-6 h-6\" />\r\n            Download\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={`w-[350px] h-[250px] text-sm sm:text-sm md:text-sm lg:text-sm overflow-auto sm:w-full md:w-full md:h-[250px] lg:w-full lg:h-[250px]`}>\r\n        <table className=\"border-collapse text-left border border-gray-700 md:w-full lg:w-full\">\r\n          <thead className=\"bg-indigo-600 \">\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className=\"capitalize px-3.5 py-2\">\r\n                    {flexRender(\r\n                      header.column.columnDef.header,\r\n                      header.getContext()\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.length ? (\r\n              table.getRowModel().rows.map((row, i) => (\r\n                <tr\r\n                  key={row.id}\r\n                  className={`\r\n                  ${i % 2 === 0 ? \"bg-gray-900\" : \"bg-gray-800\"}\r\n                  `}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <td key={cell.id} className=\"px-3.5 py-2\">\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr className=\"text-center h-32\">\r\n                <td colSpan={12}>No Recoard Found!</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"flex flex-col lg:flex-row items-center justify-center lg:justify-end mt-2 lg:mt-0 lg:gap-2 text-black\">\r\n        <button\r\n          onClick={() => {\r\n            table.previousPage();\r\n          }}\r\n          disabled={!table.getCanPreviousPage()}\r\n          className=\"p-1 border border-gray-300 px-2 lg:px-2 disabled:opacity-30\"\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            table.nextPage();\r\n          }}\r\n          disabled={!table.getCanNextPage()}\r\n          className=\"p-1 border border-gray-300 px-2 disabled:opacity-30\"\r\n        >\r\n          {\">\"}\r\n        </button>\r\n\r\n        <div className=\"mt-2 lg:mt-0 flex flex-col lg:flex-row items-center gap-2\">\r\n          <span className=\"flex items-center gap-1\">\r\n            <div>Page</div>\r\n            <strong>\r\n              {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </strong>\r\n          </span>\r\n          <span className=\"flex items-center gap-1\">\r\n            | Go to page:\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={table.getState().pagination.pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                table.setPageIndex(page);\r\n              }}\r\n              className=\"border p-1 rounded w-16 bg-transparent\"\r\n            />\r\n          </span>\r\n          <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={(e) => {\r\n              table.setPageSize(Number(e.target.value));\r\n            }}\r\n            className=\"p-1 md:p-2 lg:p-2  bg-transparent\"\r\n          >\r\n            {[10, 20, 30, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTableV1;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst EventModalV1 = ({ selectedEvent, setShowModal }) => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center\">\r\n      <div className=\"bg-white p-4 rounded shadow-md w-80\">\r\n        {/* Displaying key-value pairs of selectedEvent */}\r\n        <h2 className=\"text-lg font-semibold mb-4\">Appointment Details:</h2>\r\n        <ul className=\"text-sm\">\r\n          <li>\r\n            <strong>Start Time:</strong> {moment(selectedEvent.startTime).format('YYYY-MM-DD HH:mm:ss')}\r\n          </li>\r\n          <li>\r\n            <strong>End Time:</strong> {moment(selectedEvent.endTime).format('YYYY-MM-DD HH:mm:ss')}\r\n          </li>\r\n          <li>\r\n            <strong>Patient Name:</strong> {selectedEvent.patientId.firstname} {selectedEvent.patientId.lastname}\r\n          </li>\r\n          <li>\r\n            <strong>Patient Email:</strong> {selectedEvent.patientId.email}\r\n          </li>\r\n          <li>\r\n            <strong>Doctor Name:</strong> {selectedEvent.doctorId.firstname} {selectedEvent.doctorId.lastname}\r\n          </li>\r\n          <li>\r\n            <strong>Doctor Email:</strong> {selectedEvent.doctorId.email}\r\n          </li>\r\n          <li>\r\n            <strong>Date:</strong> {selectedEvent.date}\r\n          </li>\r\n          <li>\r\n            <strong>Appointment Start Time:</strong> {selectedEvent.appointMentStartTime}\r\n          </li>\r\n          <li>\r\n            <strong>Appointment End Time:</strong> {selectedEvent.appointMentEndTime}\r\n          </li>\r\n          <li>\r\n            <strong>Description:</strong> {selectedEvent.description}\r\n          </li>\r\n          <li>\r\n            <strong>Created At:</strong> {moment(selectedEvent.createdAt).format('YYYY-MM-DD HH:mm:ss')}\r\n          </li>\r\n          <li>\r\n            <strong>Updated At:</strong> {moment(selectedEvent.updatedAt).format('YYYY-MM-DD HH:mm:ss')}\r\n          </li>\r\n        </ul>\r\n\r\n        <button\r\n          className=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          onClick={() => setShowModal(false)}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventModalV1;\r\n","import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport MyTableV1 from \"../MyTable/MyTableV1\";\r\n\r\nconst SharedTable = ({\r\n  data,\r\n  columns,\r\n  search,\r\n  handleSubmit,\r\n  handleSearch,\r\n}) => {\r\n    console.log({search});\r\n  return (\r\n    <>\r\n      <div className=\"mt-2 ml-2\">\r\n        <form\r\n          className=\"flex items-center max-w-sm \"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <label htmlFor=\"simple-search\" className=\"sr-only\">\r\n            Search\r\n          </label>\r\n          <div className=\"relative w-full\">\r\n            <div className=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none\">\r\n              <FiSearch className=\"w-4 h-4 text-gray-500 dark:text-gray-400 \" />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"simple-search\"\r\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n              placeholder=\"Search name...\"\r\n              required\r\n              value={search}\r\n              onChange={handleSearch}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"p-2.5 ms-2 text-sm font-medium text-white bg-blue-700 rounded-lg border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n          >\r\n            <svg\r\n              className=\"w-4 h-4\"\r\n              aria-hidden=\"true\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 20 20\"\r\n            >\r\n              <path\r\n                stroke=\"currentColor\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\r\n              />\r\n            </svg>\r\n            <span className=\"sr-only\">Search</span>\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"bg-[#fff] text-sm\">\r\n        <MyTableV1\r\n          columns={columns}\r\n          data={data}\r\n          flg={false}\r\n          inpflag={false}\r\n          heightFlag={true}\r\n          // handleDownload={downloader.download}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SharedTable;\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\n\r\nconst DoctorScheduleModal = ({ doctor, setShowModal }) => {\r\n  const [formData, setFormData] = useState({\r\n    selectedDate: moment().format(\"YYYY-MM-DD\"),\r\n    selectedTime: \"\",\r\n    sessionTime: 0,\r\n    manuallyAddedTime: \"08:00\",\r\n  });\r\n  const token = useSelector((state) => state.authState.token);\r\n  const [bookingAvailability, setBookingAvailability] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  /* Custom Hook */\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    sendRequest,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    setMessage,\r\n  } = useFetch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form submitted:\", formData);\r\n\r\n    const { selectedDate } = formData;\r\n\r\n    // Combine date and time strings into a single moment object\r\n    const selectedDateTime = moment(`${selectedDate}`, \"YYYY-MM-DD HH:mm\");\r\n\r\n    console.log(`Date:`, selectedDateTime.format(\"YYYY-MM-DD\"), doctor);\r\n    getSchedule();\r\n  };\r\n\r\n  const getSchedule = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await sendRequest(\r\n        `/api/appointment/availablebookingfordoctorv1?doctorId=${doctor._id}&date=${formData.selectedDate}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n      if (response.status === false) throw new Error(response.message);\r\n      console.log(response.message);\r\n      setBookingAvailability(response.message);\r\n      // Here you can set the booking availability state based on the response\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-4 rounded shadow-md w-80\">\r\n        <h2 className=\"text-lg font-semibold mb-1\">Doctor Schedule Search:</h2>\r\n        <h2 className=\"text-md font-semibold mb-4\">{`Dr. ${doctor.firstname} ${doctor.lastname}`}</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4 md:space-y-6\">\r\n          <input\r\n            type=\"date\"\r\n            name=\"selectedDate\"\r\n            value={formData.selectedDate}\r\n            onChange={handleChange}\r\n            className=\"input-field border-solid border-2 border-black rounded-lg w-full\"\r\n          />\r\n          <NotificationBanner\r\n            isLoading={isLoading}\r\n            open={open}\r\n            setOpen={setOpen}\r\n            message={message}\r\n          />\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-[#4cceac] text-white px-4 py-2 rounded-md hover:bg-hoverColor transition duration-300 ease-in-out\"\r\n            >\r\n              Get Schedule\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"flex flex-wrap gap-2 mt-4\">\r\n          {bookingAvailability &&\r\n            Object.entries(bookingAvailability).map(([hour, available]) => (\r\n              <div key={hour} className=\"flex items-center\">\r\n                <span className=\"text-lg font-semibold mr-2\">{hour}:00</span>\r\n                {available ? (\r\n                  <FaCheck className=\"text-green-500\" />\r\n                ) : (\r\n                  <FaTimes className=\"text-red-500\" />\r\n                )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <button\r\n          className=\"mt-2 bg-[#4cceac] text-white px-4 py-2 rounded-md hover:bg-hoverColor transition duration-300 ease-in-out\"\r\n          onClick={() => setShowModal(false)}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorScheduleModal;\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { setOpen } from \"../../Slices/sideBarSlice\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction MyForm() {\r\n  const token = useSelector((state) => state.authState.token);\r\n  // Define state variables for form inputs\r\n  const [formData, setFormData] = useState({\r\n    patientId: \"\",\r\n    doctorId: \"\",\r\n    selectedDate: moment().format(\"YYYY-MM-DD\"),\r\n    sessionTime: 50,\r\n    manuallyAddedTime: \"08:00\",\r\n    description: \"teeth checkup\",\r\n  });\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    sendRequest,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    setMessage,\r\n  } = useFetch();\r\n\r\n  const extractFromTimeStamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n\r\n    // Extract the date and time components\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1; // Months are zero-indexed, so we add 1\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    // Format the date and time as needed\r\n    const formattedDate = `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n    const formattedTime = `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\r\n\r\n    console.log(\"Date:\", formattedDate);\r\n    console.log(\"Time:\", formattedTime);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(formData);\r\n      const {\r\n        patientId,\r\n        doctorId,\r\n        selectedDate,\r\n        sessionTime,\r\n        manuallyAddedTime,\r\n      } = formData;\r\n      if (\r\n        !patientId ||\r\n        !doctorId ||\r\n        !selectedDate ||\r\n        !sessionTime ||\r\n        !manuallyAddedTime\r\n      )\r\n        throw new Error(\"All fields Required\");\r\n\r\n      const selectedDateTime = moment(\r\n        `${selectedDate} ${manuallyAddedTime}`,\r\n        \"YYYY-MM-DD HH:mm\"\r\n      );\r\n      setIsLoading(true);\r\n      // Get timestamp in milliseconds\r\n      const timestamp = selectedDateTime.valueOf();\r\n      // Calculate end date and time using sessionTime\r\n\r\n      const endDateTime =\r\n        sessionTime === \"0\"\r\n          ? moment(selectedDateTime).add(sessionTime + 60, \"minutes\")\r\n          : moment(selectedDateTime).add(sessionTime, \"minutes\");\r\n      // Get end timestamp\r\n      const endTimestamp = endDateTime.valueOf();\r\n      console.log(\"Selected DateTime:\", selectedDateTime.format());\r\n      console.log(\"End DateTime:\", endDateTime.format());\r\n      console.log(\"Timestamp for booking:\", timestamp);\r\n      console.log(\"Timestamp for ending:\", endTimestamp);\r\n      extractFromTimeStamp(timestamp);\r\n      extractFromTimeStamp(endTimestamp);\r\n      const response = await sendRequest(\r\n        \"/api/appointment/createappointment\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          patientId: patientId,\r\n          doctorId: doctorId,\r\n          startTime: timestamp,\r\n          endTime: endTimestamp,\r\n          description: formData.description,\r\n        }),\r\n        { \"Content-Type\": \"application/json\", Authorization: token }\r\n      );\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setIsLoading(false);\r\n      setMessage('Appointment Created')\r\n      setOpen(true);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"\" onSubmit={handleSubmit}>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"patientId\"\r\n            value={formData.patientId}\r\n            onChange={handleChange}\r\n            id=\"patientId\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"patientId\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Patient Id\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"doctorId\"\r\n            value={formData.doctorId}\r\n            onChange={handleChange}\r\n            id=\"doctorId\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"doctorId\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Doctor Id\r\n          </label>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            id=\"description\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"description\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n           Description\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"date\"\r\n            name=\"selectedDate\"\r\n            value={formData.selectedDate}\r\n            onChange={handleChange}\r\n            id=\"selectedDate\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"selectedDate\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Select Date\r\n          </label>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"time\"\r\n            name=\"manuallyAddedTime\"\r\n            value={formData.manuallyAddedTime}\r\n            onChange={handleChange}\r\n            id=\"manuallyAddedTime\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            min=\"08:00\"\r\n            max=\"16:00\"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"manuallyAddedTime\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Select Time\r\n          </label>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"sessionTime\"\r\n            value={formData.sessionTime}\r\n            onChange={handleChange}\r\n            id=\"sessionTime\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"sessionTime\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Session In Minutes\r\n          </label>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div className=\"mt-2\">\r\n        <NotificationBanner\r\n          isLoading={isLoading}\r\n          message={message}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyForm;\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { setOpen } from \"../../Slices/sideBarSlice\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EventModalV1 from \"../models/EventModalV1\";\r\nimport DoctorScheduleModal from \"../models/DoctorScheduleModal\";\r\n\r\nfunction EditAppointmentForm({ booking, closeModal }) {\r\n  const token = useSelector((state) => state.authState.token);\r\n  console.log(booking.appointMentStartTime.slice(0, 5));\r\n  // Define state variables for form inputs\r\n  const [formData, setFormData] = useState({\r\n    patientId: booking.patientId._id,\r\n    doctorId: booking.doctorId._id,\r\n    selectedDate: moment().format(booking.date),\r\n    sessionTime: 50,\r\n    // manuallyAddedTime: \"08:00\",\r\n    manuallyAddedTime: booking.appointMentStartTime.slice(0, 5),\r\n    description: \"teeth checkup\",\r\n  });\r\n  /* This can be further optimised to devlop better performance  */\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [eventShowModalV1, setEventShowModalV1] = useState(false);\r\n  const [doctorShowModal, setDoctorShowModal] = useState(false);\r\n  const [selectedDoctor, setSectedDoctor] = useState(null);\r\n\r\n  console.log({ selectedEvent, doctor: booking.doctorId });\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    sendRequest,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    setMessage,\r\n  } = useFetch();\r\n\r\n  const extractFromTimeStamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n\r\n    // Extract the date and time components\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1; // Months are zero-indexed, so we add 1\r\n    const day = date.getDate();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const seconds = date.getSeconds();\r\n\r\n    // Format the date and time as needed\r\n    const formattedDate = `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n    const formattedTime = `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\r\n\r\n    console.log(\"Date:\", formattedDate);\r\n    console.log(\"Time:\", formattedTime);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(formData);\r\n      console.log({ booking });\r\n\r\n      const {\r\n        patientId,\r\n        doctorId,\r\n        selectedDate,\r\n        sessionTime,\r\n        manuallyAddedTime,\r\n      } = formData;\r\n      if (\r\n        !patientId ||\r\n        !doctorId ||\r\n        !selectedDate ||\r\n        !sessionTime ||\r\n        !manuallyAddedTime\r\n      )\r\n        throw new Error(\"All fields Required\");\r\n\r\n      const selectedDateTime = moment(\r\n        `${selectedDate} ${manuallyAddedTime}`,\r\n        \"YYYY-MM-DD HH:mm\"\r\n      );\r\n      setIsLoading(true);\r\n      // Get timestamp in milliseconds\r\n      const timestamp = selectedDateTime.valueOf();\r\n      // Calculate end date and time using sessionTime\r\n\r\n      const endDateTime =\r\n        sessionTime === \"0\"\r\n          ? moment(selectedDateTime).add(sessionTime + 60, \"minutes\")\r\n          : moment(selectedDateTime).add(sessionTime, \"minutes\");\r\n      // Get end timestamp\r\n      const endTimestamp = endDateTime.valueOf();\r\n      console.log(\"Selected DateTime:\", selectedDateTime.format());\r\n      console.log(\"End DateTime:\", endDateTime.format());\r\n      console.log(\"Timestamp for booking:\", timestamp);\r\n      console.log(\"Timestamp for ending:\", endTimestamp);\r\n      extractFromTimeStamp(timestamp);\r\n      extractFromTimeStamp(endTimestamp);\r\n      const response = await sendRequest(\r\n        `/api/appointment/updateappointment/${booking._id}`,\r\n        \"PUT\",\r\n        JSON.stringify({\r\n          patientId: patientId,\r\n          doctorId: doctorId,\r\n          startTime: timestamp,\r\n          endTime: endTimestamp,\r\n          description: formData.description,\r\n        }),\r\n        { \"Content-Type\": \"application/json\", Authorization: token }\r\n      );\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setIsLoading(false);\r\n      setMessage(\"Appointment Updated\");\r\n      setOpen(true);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"bg-white\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <h1> Edit Appointment </h1>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"patientId\"\r\n            value={formData.patientId}\r\n            onChange={handleChange}\r\n            id=\"patientId\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"patientId\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Patient Id\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"doctorId\"\r\n            value={formData.doctorId}\r\n            onChange={handleChange}\r\n            id=\"doctorId\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"doctorId\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Doctor Id\r\n          </label>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            id=\"description\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"description\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Description\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"date\"\r\n            name=\"selectedDate\"\r\n            value={formData.selectedDate}\r\n            onChange={handleChange}\r\n            id=\"selectedDate\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"selectedDate\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Select Date\r\n          </label>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"time\"\r\n            name=\"manuallyAddedTime\"\r\n            value={formData.manuallyAddedTime}\r\n            onChange={handleChange}\r\n            id=\"manuallyAddedTime\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            min=\"08:00\"\r\n            max=\"16:00\"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"manuallyAddedTime\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Select Time\r\n          </label>\r\n        </div>\r\n        <div className=\"relative z-0 w-full mb-5 group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"sessionTime\"\r\n            value={formData.sessionTime}\r\n            onChange={handleChange}\r\n            id=\"sessionTime\"\r\n            className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-gray-800 dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n            placeholder=\" \"\r\n            required\r\n          />\r\n          <label\r\n            htmlFor=\"sessionTime\"\r\n            className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n          >\r\n            Session In Minutes\r\n          </label>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n         hover:text-gray-800 transition-colors duration-300 \"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div className=\"flex gap-1\">\r\n        <div>\r\n          <button\r\n            className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n         hover:text-gray-800 transition-colors duration-300 \"\r\n            onClick={(e) => {\r\n              closeModal(false);\r\n              setEventShowModalV1(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"mt-2 text-sm flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n         hover:text-gray-800 transition-colors duration-300 \"\r\n            onClick={async (e) => {\r\n              setEventShowModalV1(false);\r\n              try {\r\n                const response = await sendRequest(\r\n                  \"/api/doctor/getalldoctor/\" + formData.doctorId,\r\n                  \"GET\",\r\n                  null,\r\n                  {\r\n                    Authorization: token,\r\n                  }\r\n                );\r\n                if (response.status === false)\r\n                  throw new Error(response.message);\r\n                console.log({ doctor: response.message });\r\n                setSectedDoctor(response.message);\r\n                setDoctorShowModal(true);\r\n              } catch (error) {\r\n                console.log(error.message);\r\n              }\r\n              // setDoctorShowModal(true);\r\n            }}\r\n          >\r\n            Dr Schedule\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"text-sm mt-2 flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n         hover:text-gray-800 transition-colors duration-300 \"\r\n            onClick={(e) => {\r\n              setSelectedEvent(booking);\r\n              setEventShowModalV1(true);\r\n            }}\r\n          >\r\n            View Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Below two can be optimised better */}\r\n      {eventShowModalV1 && (\r\n        <EventModalV1\r\n          selectedEvent={selectedEvent}\r\n          setShowModal={setEventShowModalV1}\r\n        />\r\n      )}\r\n      {doctorShowModal && (\r\n        <DoctorScheduleModal\r\n          doctor={selectedDoctor}\r\n          setShowModal={setDoctorShowModal}\r\n        />\r\n      )}\r\n      <div className=\"mt-2\">\r\n        <NotificationBanner\r\n          isLoading={isLoading}\r\n          message={message}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditAppointmentForm;\r\n","import React from \"react\";\r\nimport EditAppointmentForm from \"../Forms/EditAppointmentForm\";\r\nimport ModalWrapperV1 from \"./ModalWrapperV1\";\r\n\r\nconst EditAppointmentModal = ({ booking, closeModal }) => {\r\n  return (\r\n    <ModalWrapperV1>\r\n      <EditAppointmentForm booking={booking} closeModal={closeModal} />\r\n    </ModalWrapperV1>\r\n  );\r\n};\r\n\r\nexport default EditAppointmentModal;\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport DashboardWrapper from \"../Shared/DashboardWrapper\";\r\nimport Header from \"../Shared/Header\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"./customMonthStyles.css\"; // Import your custom styles\r\nimport \"./customAgendaStyles.css\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport { FaCheck, FaTimes, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { GrFormView } from \"react-icons/gr\";\r\nimport moment from \"moment\";\r\nimport BookingModal from \"../models/BookingModal\";\r\nimport useFetch from \"../../Hooks/useFetch\";\r\nimport NotificationBanner from \"../Banner/NotificationBanner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EventModal from \"../models/EventModal\";\r\nimport { createColumnHelper } from \"@tanstack/react-table\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport MyTable from \"../MyTable/MyTable\";\r\nimport PatientTable from \"../SharedTables/PatientTable\";\r\nimport EventModalV1 from \"../models/EventModalV1\";\r\nimport MyTableV1 from \"../MyTable/MyTableV1\";\r\nimport SharedTable from \"../SharedTables/SharedTable\";\r\nimport DoctorTable from \"../SharedTables/DoctorTable\";\r\nimport { FaUserClock } from \"react-icons/fa\";\r\nimport DoctorScheduleModal from \"../models/DoctorScheduleModal\";\r\nimport MyForm from \"../Forms/MyFormv1\";\r\nimport { IoRefreshOutline } from \"react-icons/io5\";\r\nimport EditAppointmentModal from \"../models/EditAppointmentModal\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// Custom Event Component\r\nconst MyEvent = ({ event }) => {\r\n  return (\r\n    <div className=\"bg-white w-20 md:w-80 lg:w-80  overflow-auto p-4 rounded shadow-md z-50\">\r\n      <h2 className=\"text-sm font-bold mb-2\">{event.title}</h2>\r\n      <h2 className=\"text-sm font-bold mb-2\">\r\n        AppointmentId:{event.appointmentId}\r\n      </h2>\r\n      <p>Start: {moment(event.start).format(\"MMMM Do YYYY, h:mm a\")}</p>\r\n      <p>End: {moment(event.end).format(\"MMMM Do YYYY, h:mm a\")}</p>\r\n      <p className=\"text-sm\">PatientId: {event.patientId}</p>\r\n      <p className=\"text-sm\">PatientName: {event.patient}</p>\r\n      <p className=\"text-sm\">DoctorId: {event.doctorId}</p>\r\n      <p className=\"text-sm\">DoctorName: {event.doctor}</p>\r\n      <div className=\"w-18 md:w-75 lg:w-75 overflow-auto\">\r\n        <p className=\"text-sm\">Description: {event.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookAppointment = () => {\r\n  const token = useSelector((state) => state.authState.token);\r\n  // Calculate min date (today at 8 AM)\r\n  const minDate = moment().startOf(\"day\").add(8, \"hours\").toDate();\r\n  // Calculate max date (today at 5 PM)\r\n  const maxDate = moment().startOf(\"day\").add(17, \"hours\").toDate();\r\n\r\n  /* Query Parameters */\r\n  const [patientSearch, setPatientSearch] = useState(\"\");\r\n  const [doctorSearch, setDoctorSearch] = useState(\"\");\r\n\r\n  const [events, setEvents] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [patientData, setPatientData] = useState([]);\r\n  const [doctorData, setDoctorData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [eventShowModal, setEventShowModal] = useState(false);\r\n  const [eventShowModalV1, setEventShowModalV1] = useState(false);\r\n  const [doctorShowModal, setDoctorShowModal] = useState(false);\r\n  const [selectedDate, SetSelectedDate] = useState(null);\r\n  const [selectedDoctor, setSectedDoctor] = useState(null);\r\n\r\n  const [eventTitle, setEventTitle] = useState(\"\");\r\n  /* Hanlde the select slot */\r\n  const handleSelectSlot = (e) => {\r\n    console.log(e.start);\r\n    // setShowModal(true);\r\n    SetSelectedDate(e.start);\r\n  };\r\n\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [selectedView, setSelectedView] = useState(\"month\");\r\n  const columnHelper = createColumnHelper();\r\n\r\n  /* show edit states */\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  /* Appointment Columns */\r\n  const columns = [\r\n    columnHelper.accessor(\"_id\", { header: \"ID\" }),\r\n    // columnHelper.accessor(\"patientId.firstname\", {\r\n    //   header: \"Patient First Name\",\r\n    // }),\r\n    // columnHelper.accessor(\"patientId.lastname\", {\r\n    //   header: \"Patient Last Name\",\r\n    // }),\r\n    columnHelper.accessor(\"patientId.email\", { header: \"Patient Email\" }),\r\n    // columnHelper.accessor(\"doctorId.firstname\", {\r\n    //   header: \"Doctor First Name\",\r\n    // }),\r\n    // columnHelper.accessor(\"doctorId.lastname\", { header: \"Doctor Last Name\" }),\r\n    columnHelper.accessor(\"doctorId.email\", { header: \"Doctor Email\" }),\r\n    columnHelper.accessor(\"date\", { header: \"Date\" }),\r\n    columnHelper.accessor(\"appointMentStartTime\", {\r\n      header: \"Appointment Start Time\",\r\n    }),\r\n    columnHelper.accessor(\"appointMentEndTime\", {\r\n      header: \"Appointment End Time\",\r\n    }),\r\n    columnHelper.accessor(\"View\", {\r\n      header: \"View\",\r\n      cell: (info) => {\r\n        return (\r\n          <div className=\"flex justify-center items-center\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(info.row.original);\r\n                setSelectedEvent(info.row.original);\r\n                setEventShowModalV1(true);\r\n              }}\r\n              className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n              hover:text-gray-800 transition-colors duration-300 \"\r\n            >\r\n              <GrFormView />\r\n              {/* <span>Edit</span> */}\r\n            </button>\r\n          </div>\r\n        );\r\n      },\r\n    }),\r\n    columnHelper.accessor(\"Edit\", {\r\n      header: \"Edit\",\r\n      cell: (info) => {\r\n        return (\r\n          <div className=\"flex justify-center items-center\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(info.row.original);\r\n                setSelectedBooking(info.row.original);\r\n                setShowEditModal(true);\r\n              }}\r\n              className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n              hover:text-gray-800 transition-colors duration-300 \"\r\n            >\r\n              <FaEdit />\r\n              {/* <span>Edit</span> */}\r\n            </button>\r\n          </div>\r\n        );\r\n      },\r\n    }),\r\n    columnHelper.accessor(\"Delete\", {\r\n      header: \"Delete\",\r\n      cell: (info) => {\r\n        return (\r\n          <div className=\"flex justify-center items-center\">\r\n            <button\r\n              onClick={async (e) => {\r\n                console.log(info.row.original);\r\n                try {\r\n                  setIsLoading(true);\r\n                  const response = await sendRequest(\r\n                    `/api/appointment/deleteappointment/${info.row.original._id}`,\r\n                    \"DELETE\",\r\n                    null,\r\n                    { Authorization: token }\r\n                  );\r\n                  console.log(response);\r\n                  if (response.status === false)\r\n                    throw new Error(response.message);\r\n                  // Remove the deleted appointment from your data array\r\n                  setData((prevData) =>\r\n                    prevData.filter(\r\n                      (item) => item._id !== info.row.original._id\r\n                    )\r\n                  );\r\n                  setIsLoading(false);\r\n                  setMessage(\"Appointment Deleted\");\r\n                  setOpen(true);\r\n                } catch (error) {\r\n                  setIsLoading(false);\r\n                  setOpen(true);\r\n                  setMessage(error.message);\r\n                }\r\n              }}\r\n              className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md   hover:text-gray-800 transition-colors duration-300 \"\r\n            >\r\n              <FaTrash />\r\n              {/* <span>Delete</span> */}\r\n            </button>\r\n          </div>\r\n        );\r\n      },\r\n    }),\r\n  ];\r\n\r\n  /* Create PatientColumns */\r\n  const patientColumns = [\r\n    columnHelper.accessor(\"_id\", { header: \"ID\" }),\r\n    columnHelper.accessor(\"firstname\", { header: \"First Name\" }),\r\n    columnHelper.accessor(\"lastname\", { header: \"Last Name\" }),\r\n    columnHelper.accessor(\"email\", { header: \"Email\" }),\r\n    columnHelper.accessor(\"phonenumber\", { header: \"Phone Number\" }),\r\n  ];\r\n\r\n  const doctorColumns = [\r\n    columnHelper.accessor(\"_id\", { header: \"ID\" }),\r\n    columnHelper.accessor(\"firstname\", { header: \"First Name\" }),\r\n    columnHelper.accessor(\"lastname\", { header: \"Last Name\" }),\r\n    columnHelper.accessor(\"email\", { header: \"Email\" }),\r\n    columnHelper.accessor(\"phonenumber\", { header: \"Phone Number\" }),\r\n    columnHelper.accessor(\"specialization\", { header: \"Specialization\" }),\r\n    columnHelper.accessor(\"years_of_experience\", { header: \"Experience\" }),\r\n    columnHelper.accessor(\"Delete\", {\r\n      header: \"Check Schedule\",\r\n      cell: (info) => {\r\n        return (\r\n          <div className=\"flex justify-center items-center\">\r\n            <button\r\n              onClick={(e) => {\r\n                console.log(info.row.original);\r\n                setDoctorShowModal(true);\r\n                setSectedDoctor(info.row.original);\r\n              }}\r\n              className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md   hover:text-gray-800 transition-colors duration-300 \"\r\n            >\r\n              <FaUserClock />\r\n            </button>\r\n          </div>\r\n        );\r\n      },\r\n    }),\r\n  ];\r\n  /* Custom Hook */\r\n  const {\r\n    isLoading,\r\n    setIsLoading,\r\n    sendRequest,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    setMessage,\r\n  } = useFetch();\r\n  /* Calandar manager */\r\n  const { defaultDate, views } = useMemo(\r\n    () => ({\r\n      defaultDate: new Date(),\r\n      views: [Views.MONTH, Views.DAY, Views.AGENDA],\r\n    }),\r\n    []\r\n  );\r\n  /* Handle the event selected */\r\n  const handleSelectEvent = (event) => {\r\n    console.log(event);\r\n    setSelectedEvent(event);\r\n    setEventShowModal(true);\r\n  };\r\n  /* Handle the view change */\r\n  const handleViewChange = (view) => {\r\n    console.log(view);\r\n    setSelectedView(view);\r\n  };\r\n  /* close booking modal */\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  /* Retrieve all the appointments */\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await sendRequest(\r\n        \"/api/appointment/getallappointments\",\r\n        \"GET\",\r\n        null,\r\n        { Authorization: token }\r\n      );\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setData(response.message);\r\n      const newArr = response.message.map((booking) => {\r\n        return {\r\n          title: booking.patientId.firstname + \" \" + booking.patientId.lastname,\r\n          start: new Date(booking.startTime),\r\n          end: new Date(booking.endTime),\r\n          appointmentId: booking._id,\r\n          patientId: booking.patientId._id,\r\n          patient:\r\n            booking.patientId.firstname + \" \" + booking.patientId.lastname,\r\n          doctorId: booking.doctorId._id,\r\n          doctor: booking.doctorId.firstname + \" \" + booking.doctorId.lastname,\r\n          description: booking.description,\r\n        };\r\n      });\r\n      console.log(newArr);\r\n      setEvents(newArr);\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 2000);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n  /* Fetch ALL the doctors */\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      if (!doctorSearch) return;\r\n      setIsLoading(true);\r\n      const response = await sendRequest(\r\n        `/api/doctor/searchdoctors?search=${doctorSearch}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setDoctorData(response.message);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  /* Handle Doctor Search */\r\n  const handleDoctorSearch = useCallback(\r\n    (e) => {\r\n      setDoctorSearch(e.target.value);\r\n    },\r\n    [doctorSearch]\r\n  );\r\n  const handleDoctorSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      console.log(doctorSearch);\r\n      fetchDoctors();\r\n    },\r\n    [doctorSearch]\r\n  );\r\n\r\n  /* Fetch patients */\r\n  const fetchPatients = async () => {\r\n    try {\r\n      if (!patientSearch) return;\r\n      setIsLoading(true);\r\n      const response = await sendRequest(\r\n        `/api/patient/searchpatients?search=${patientSearch}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: token,\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (response.status === false) throw new Error(response.message);\r\n      setPatientData(response.message);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setOpen(true);\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  /* Handle Patient Search */\r\n  const handlePatientSearch = useCallback(\r\n    (e) => {\r\n      setPatientSearch(e.target.value);\r\n    },\r\n    [patientSearch]\r\n  );\r\n  const handlePatientSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      console.log(patientSearch);\r\n      fetchPatients();\r\n    },\r\n    [patientSearch]\r\n  );\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <div className=\"flex text-sm md:text-[20px] lg:text-lg  flex-col lg:px-32 px-5 pt-0 lg:pt-0\">\r\n        <Header title={\"Manage Your Appointments\"} />\r\n        <div className=\"my-1\">\r\n          <button\r\n            onClick={(e) => {\r\n              fetchAppointments();\r\n            }}\r\n            className=\"flex items-center gap-1 bg-green-500 text-white py-1 px-2 rounded-md \r\n              hover:text-gray-800 transition-colors duration-300 \"\r\n          >\r\n            <IoRefreshOutline size={30} />\r\n            Refresh\r\n            {/* <span>Edit</span> */}\r\n          </button>\r\n        </div>\r\n        <div className=\"h-[400px] mt-2 sm:h-[450px] md:h-[450px] lg:[h-500px]\">\r\n          {!showModal &&\r\n            !eventShowModal &&\r\n            !eventShowModalV1 &&\r\n            !doctorShowModal && (\r\n              <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                selectable={true}\r\n                onSelectEvent={handleSelectEvent}\r\n                onSelectSlot={handleSelectSlot}\r\n                components={{\r\n                  event: selectedView === \"agenda\" ? MyEvent : undefined, // Render MyEvent only when the selected view is \"agenda\"\r\n                }}\r\n                min={minDate}\r\n                max={maxDate}\r\n                defaultDate={defaultDate}\r\n                onView={handleViewChange}\r\n                defaultView={selectedView}\r\n                views={views}\r\n                step={15}\r\n              />\r\n            )}\r\n        </div>\r\n        {showModal && <BookingModal closeModal={closeModal} />}\r\n        {eventShowModal && (\r\n          <EventModal\r\n            selectedEvent={selectedEvent}\r\n            setShowModal={setEventShowModal}\r\n          />\r\n        )}\r\n        {eventShowModalV1 && (\r\n          <EventModalV1\r\n            selectedEvent={selectedEvent}\r\n            setShowModal={setEventShowModalV1}\r\n          />\r\n        )}\r\n        {doctorShowModal && (\r\n          <DoctorScheduleModal\r\n            doctor={selectedDoctor}\r\n            setShowModal={setDoctorShowModal}\r\n          />\r\n        )}\r\n        {showEditModal && (\r\n          <EditAppointmentModal\r\n            closeModal={setShowEditModal}\r\n            booking={selectedBooking}\r\n          />\r\n        )}\r\n        <NotificationBanner\r\n          isLoading={isLoading}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          message={message}\r\n        />\r\n        {!isLoading && (\r\n          <div className=\"mt-2 w-full overflow-auto\">\r\n            <h1 className=\"text-sm font-bold\">Manage Appointment</h1>\r\n            <div className=\"text-sm\">\r\n              {!isLoading && (\r\n                <MyTableV1\r\n                  columns={columns}\r\n                  data={data}\r\n                  flg={false}\r\n                  heightFlag={true}\r\n                  // handleDownload={downloader.download}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Create Appointment */}\r\n        <div className=\"mt-2 \">\r\n          <h1 className=\"text-sm \">Create Appointment</h1>\r\n          {/* Search Patient */}\r\n          <div>\r\n            <p className=\"text-sm mt-2 rounded-lg font-bold ml-2 bg-gray-800 max-w-sm text-white\">\r\n              Search Patient{\" \"}\r\n            </p>\r\n            <SharedTable\r\n              columns={patientColumns}\r\n              data={patientData}\r\n              search={patientSearch}\r\n              handleSubmit={handlePatientSubmit}\r\n              handleSearch={handlePatientSearch}\r\n            />\r\n          </div>\r\n          {/* Search Doctor */}\r\n          <div>\r\n            <p className=\"text-sm mt-2 rounded-lg font-bold ml-2 bg-gray-800 max-w-sm text-white\">\r\n              Search Doctor{\" \"}\r\n            </p>\r\n            <SharedTable\r\n              columns={doctorColumns}\r\n              data={doctorData}\r\n              search={doctorSearch}\r\n              handleSubmit={handleDoctorSubmit}\r\n              handleSearch={handleDoctorSearch}\r\n            />\r\n          </div>\r\n          <div className=\"my-2  py-5\">\r\n            <div className=\"mb-2\">\r\n              <p> Book Appointment </p>\r\n            </div>\r\n            <MyForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DashboardWrapper>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst DebouncedInput = ({\r\n  value: initValue,\r\n  onChange,\r\n  debounce = 700,\r\n  ...props\r\n}) => {\r\n  const [value, setValue] = useState(initValue);\r\n\r\n  useEffect(() => {\r\n    setValue(initValue);\r\n  }, [initValue]);\r\n\r\n  // *  0.5s after set value in state\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      onChange(value);\r\n    }, debounce);\r\n    return () => clearTimeout(timeout);\r\n  }, [value]);\r\n\r\n  return (\r\n    <input\r\n      {...props}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DebouncedInput;\r\n","import React, { useState } from \"react\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\n\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport DebouncedInput from \"./DebouncedInput\";\r\n\r\nconst MyTable = ({\r\n  columns,\r\n  data,\r\n  handleDownload,\r\n  flg = true,\r\n  inpflag = true,\r\n  heightFlag=false\r\n}) => {\r\n  const [globalFilter, setGlobalFilter] = useState(\"\");\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: {\r\n      globalFilter,\r\n    },\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-2 text-white \">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        {inpflag && (\r\n          <div className=\"flex items-center gap-2 text-black\">\r\n            <DebouncedInput\r\n              value={globalFilter ?? \"\"}\r\n              onChange={(value) => setGlobalFilter(String(value))}\r\n              className=\"p-2 bg-transparent outline-none border-b-2 focus:border-indigo-500\"\r\n              placeholder=\"Search all columns...\"\r\n            />\r\n          </div>\r\n        )}\r\n        {flg && (\r\n          <button\r\n            onClick={(e) => {}}\r\n            className=\"p-2 bg-green-500 rounded-md text-white flex items-center gap-1\"\r\n          >\r\n            <BsDownload className=\"w-6 h-6\" />\r\n            Download\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"w-[350px] h-[400px] text-sm sm:text-sm md:text-sm lg:text-sm overflow-auto sm:w-full md:w-full md:h-[484px] lg:w-full lg:h-[484px]\">\r\n        <table className=\"border-collapse text-left border border-gray-700 md:w-full lg:w-full\">\r\n          <thead className=\"bg-indigo-600 \">\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className=\"capitalize px-3.5 py-2\">\r\n                    {flexRender(\r\n                      header.column.columnDef.header,\r\n                      header.getContext()\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.length ? (\r\n              table.getRowModel().rows.map((row, i) => (\r\n                <tr\r\n                  key={row.id}\r\n                  className={`\r\n                  ${i % 2 === 0 ? \"bg-gray-900\" : \"bg-gray-800\"}\r\n                  `}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <td key={cell.id} className=\"px-3.5 py-2\">\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr className=\"text-center h-32\">\r\n                <td colSpan={12}>No Recoard Found!</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"flex flex-col lg:flex-row items-center justify-center lg:justify-end mt-2 lg:mt-0 lg:gap-2 text-black\">\r\n        <button\r\n          onClick={() => {\r\n            table.previousPage();\r\n          }}\r\n          disabled={!table.getCanPreviousPage()}\r\n          className=\"p-1 border border-gray-300 px-2 lg:px-2 disabled:opacity-30\"\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            table.nextPage();\r\n          }}\r\n          disabled={!table.getCanNextPage()}\r\n          className=\"p-1 border border-gray-300 px-2 disabled:opacity-30\"\r\n        >\r\n          {\">\"}\r\n        </button>\r\n\r\n        <div className=\"mt-2 lg:mt-0 flex flex-col lg:flex-row items-center gap-2\">\r\n          <span className=\"flex items-center gap-1\">\r\n            <div>Page</div>\r\n            <strong>\r\n              {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </strong>\r\n          </span>\r\n          <span className=\"flex items-center gap-1\">\r\n            | Go to page:\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={table.getState().pagination.pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                table.setPageIndex(page);\r\n              }}\r\n              className=\"border p-1 rounded w-16 bg-transparent\"\r\n            />\r\n          </span>\r\n          <select\r\n            value={table.getState().pagination.pageSize}\r\n            onChange={(e) => {\r\n              table.setPageSize(Number(e.target.value));\r\n            }}\r\n            className=\"p-1 md:p-2 lg:p-2  bg-transparent\"\r\n          >\r\n            {[10, 20, 30, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst EventModal = ({ selectedEvent, setShowModal }) => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center\">\r\n      <div className=\"bg-white p-4 rounded shadow-md w-80\">\r\n        <h2 className=\"text-xl font-bold mb-2\">{selectedEvent.title}</h2>\r\n        <p className=\"text-sm\">AppointmentId: {selectedEvent.appointmentId}</p>\r\n        <p className=\"text-sm\">\r\n          Start: {moment(selectedEvent.start).format(\"MMMM Do YYYY, h:mm a\")}\r\n        </p>\r\n        <p className=\"text-sm\">\r\n          End: {moment(selectedEvent.end).format(\"MMMM Do YYYY, h:mm a\")}\r\n        </p>\r\n        <p className=\"text-sm\">PatientId: {selectedEvent.patientId}</p>\r\n        <p className=\"text-sm\">PatientName: {selectedEvent.patient}</p>\r\n        <p className=\"text-sm\">DoctorId: {selectedEvent.doctorId}</p>\r\n        <p className=\"text-sm\">DoctorName: {selectedEvent.doctor}</p>\r\n\r\n        <button\r\n          className=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          onClick={() => setShowModal(false)}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventModal;\r\n","import React from \"react\";\r\n\r\nconst ModalWrapper = ({ children }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div className=\"popup-form absolute mt-12 text-black\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWrapper;\r\n","import React from \"react\";\r\n\r\nconst ModalWrapperV1 = ({ children }) => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-4 rounded shadow-md w-80\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWrapperV1;\r\n"],"names":["_ref","closeModal","formData","setFormData","useState","customerId","selectedService","selectedDate","selectedTime","sessionTime","manuallyAddedTime","switchState","setSwitchState","extractFromTimeStamp","timestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedDate","concat","toString","padStart","formattedTime","console","log","handleChange","e","name","value","target","prevData","_jsx","ModalWrapper","children","_jsxs","className","onSubmit","preventDefault","selectedDateTime","moment","valueOf","endDateTime","add","endTimestamp","format","type","placeholder","onChange","map","service","index","min","max","availableTimes","i","push","fetchAvailableTimes","time","checked","toggleSwitch","onClick","columns","data","handleDownload","flg","inpflag","heightFlag","globalFilter","setGlobalFilter","table","useReactTable","state","getFilteredRowModel","getCoreRowModel","getPaginationRowModel","DebouncedInput","String","BsDownload","getHeaderGroups","headerGroup","headers","header","flexRender","column","columnDef","getContext","id","getRowModel","rows","length","row","getVisibleCells","cell","colSpan","previousPage","disabled","getCanPreviousPage","nextPage","getCanNextPage","getState","pagination","pageIndex","getPageCount","defaultValue","page","Number","setPageIndex","pageSize","setPageSize","selectedEvent","setShowModal","startTime","endTime","patientId","firstname","lastname","email","doctorId","appointMentStartTime","appointMentEndTime","description","createdAt","updatedAt","search","handleSubmit","handleSearch","_Fragment","htmlFor","FiSearch","required","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","MyTableV1","doctor","token","useSelector","authState","bookingAvailability","setBookingAvailability","isLoading","setIsLoading","sendRequest","open","setOpen","message","setMessage","useFetch","getSchedule","async","response","_id","Authorization","status","Error","error","NotificationBanner","Object","entries","_ref2","hour","available","FaCheck","FaTimes","prevState","JSON","stringify","booking","slice","setSelectedEvent","eventShowModalV1","setEventShowModalV1","doctorShowModal","setDoctorShowModal","selectedDoctor","setSectedDoctor","EventModalV1","DoctorScheduleModal","ModalWrapperV1","EditAppointmentForm","localizer","momentLocalizer","MyEvent","event","title","appointmentId","start","end","patient","BookAppointment","minDate","startOf","toDate","maxDate","patientSearch","setPatientSearch","doctorSearch","setDoctorSearch","events","setEvents","setData","patientData","setPatientData","doctorData","setDoctorData","showModal","eventShowModal","setEventShowModal","SetSelectedDate","eventTitle","setEventTitle","selectedView","setSelectedView","columnHelper","createColumnHelper","showEditModal","setShowEditModal","selectedBooking","setSelectedBooking","accessor","info","original","GrFormView","FaEdit","filter","item","FaTrash","patientColumns","doctorColumns","FaUserClock","defaultDate","views","useMemo","Views","MONTH","DAY","AGENDA","fetchAppointments","newArr","setTimeout","handleDoctorSearch","useCallback","handleDoctorSubmit","fetchDoctors","handlePatientSearch","handlePatientSubmit","fetchPatients","useEffect","DashboardWrapper","Header","IoRefreshOutline","size","Calendar","startAccessor","endAccessor","selectable","onSelectEvent","onSelectSlot","components","undefined","onView","view","defaultView","step","BookingModal","EventModal","EditAppointmentModal","SharedTable","MyForm","initValue","debounce","props","setValue","timeout","clearTimeout"],"sourceRoot":""}